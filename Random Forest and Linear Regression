{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c15c106c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: nba_api in /opt/conda/lib/python3.9/site-packages (1.1.14)\n",
      "Requirement already satisfied: numpy<2.0.0,>=1.22.2 in /opt/conda/lib/python3.9/site-packages (from nba_api) (1.23.5)\n",
      "Requirement already satisfied: requests in /opt/conda/lib/python3.9/site-packages (from nba_api) (2.26.0)\n",
      "Requirement already satisfied: charset-normalizer~=2.0.0 in /opt/conda/lib/python3.9/site-packages (from requests->nba_api) (2.0.0)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/conda/lib/python3.9/site-packages (from requests->nba_api) (1.26.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.9/site-packages (from requests->nba_api) (2021.10.8)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.9/site-packages (from requests->nba_api) (3.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install nba_api\n",
    "from nba_api.stats.static import teams\n",
    "from nba_api.stats.endpoints import leaguegamefinder\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b961bd8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "cddd7e49",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def keep_games(df, keep_method='home'):\n",
    "    '''Combine a TEAM_ID-GAME_ID unique table into rows by game. Slow.\n",
    "\n",
    "        Parameters\n",
    "        ----------\n",
    "        df : Input DataFrame.\n",
    "        keep_method : {'home', 'away', 'winner', 'loser', ``None``}, default 'home'\n",
    "            - 'home' : Keep rows where TEAM_A is the home team.\n",
    "            - 'away' : Keep rows where TEAM_A is the away team.\n",
    "            - 'winner' : Keep rows where TEAM_A is the losing team.\n",
    "            - 'loser' : Keep rows where TEAM_A is the winning team.\n",
    "            - ``None`` : Keep all rows. Will result in an output DataFrame the same\n",
    "                length as the input DataFrame.\n",
    "                \n",
    "        Returns\n",
    "        -------\n",
    "        result : DataFrame\n",
    "    '''\n",
    "    if keep_method =='home':\n",
    "        result = df[df[\"MATCHUP\"].str.contains(\" vs. \")]\n",
    "\n",
    "        \n",
    "    elif keep_method ==\"away\":\n",
    "        result = df[df[\"MATCHUP\"].str.contains(\" @ \")]\n",
    "        \n",
    "        \n",
    "    \n",
    "    return result\n",
    "    \n",
    "\n",
    "    \n",
    "\n",
    "    \n",
    "def clean_wins(df):\n",
    "    df[\"win\"] = [1 if i==\"W\" else 0 for i in df[\"WL\"]]\n",
    "    return df\n",
    "\n",
    "\n",
    "\n",
    "def grouper(df):\n",
    "    return df.groupby(\"SEASON_ID\").agg(np.sum)\n",
    "\n",
    "\n",
    "def reg(df):\n",
    "    at_least_20 = pd.DataFrame(df.groupby(\"SEASON_ID\").size()>20).reset_index()\n",
    "    the_df = df.merge(at_least_20,on=\"SEASON_ID\").rename(columns={0:\"Regular_season\"})\n",
    "    \n",
    "    return the_df[the_df[\"Regular_season\"]==True]\n",
    "        \n",
    "    \n",
    "\n",
    "\n",
    "def get_games(abbreviation_lst):\n",
    "    nba_teams = teams.get_teams()\n",
    "    the_tracker = {}\n",
    "    for i in abbreviation_lst:\n",
    "        team = [team for team in nba_teams if team['abbreviation'] == i][0]\n",
    "        team_id = team['id']\n",
    "        ## get all the games\n",
    "        time.sleep(2)\n",
    "        game_finder_two = leaguegamefinder.LeagueGameFinder(team_id_nullable=team_id)\n",
    "        ## Storing games in the following: {team_1:[home_df,away_df],team2:[home_df,away_df]}\n",
    "        games_two = game_finder_two.get_data_frames()[0]\n",
    "        isolated_dates = games_two[(games_two.GAME_DATE >= '2000-08-16') & (games_two.GAME_DATE < '2020-06-16')]\n",
    "        away_games = keep_games(isolated_dates,keep_method=\"away\")\n",
    "        home_games = keep_games(isolated_dates,keep_method=\"home\")\n",
    "        for_away = clean_wins(away_games)\n",
    "        for_home = clean_wins(home_games)\n",
    "        reg_away = reg(for_away)\n",
    "        reg_home = reg(for_home)\n",
    "        grouped_home = grouper(reg_home)\n",
    "        grouped_away = grouper(reg_away)\n",
    "        the_tracker[i]= [grouped_home,grouped_away]\n",
    "        print(i)\n",
    "    return the_tracker\n",
    "\n",
    "\n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "3e2203db",
   "metadata": {},
   "outputs": [],
   "source": [
    "def combine_dfs(dic,home=True):\n",
    "    empty_data_frame = pd.DataFrame()\n",
    "    for i in dic:\n",
    "        if home==True:\n",
    "            \n",
    "            empty_data_frame = pd.concat([empty_data_frame,dic[i][0]], ignore_index=True)\n",
    "        else:\n",
    "            empty_data_frame = pd.concat([empty_data_frame,dic[i][1]], ignore_index=True)\n",
    "            \n",
    "    return empty_data_frame\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "a577adc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "nba_teams = teams.get_teams()\n",
    "the_abreviations = [nba_teams[i][\"abbreviation\"] for i in range(len(nba_teams))]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "0012ba86",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_117/242278372.py:35: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df[\"win\"] = [1 if i==\"W\" else 0 for i in df[\"WL\"]]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ATL\n",
      "BOS\n",
      "CLE\n",
      "NOP\n",
      "CHI\n",
      "DAL\n",
      "DEN\n",
      "GSW\n",
      "HOU\n",
      "LAC\n",
      "LAL\n",
      "MIA\n",
      "MIL\n",
      "MIN\n",
      "BKN\n",
      "NYK\n",
      "ORL\n",
      "IND\n",
      "PHI\n",
      "PHX\n",
      "POR\n",
      "SAC\n",
      "SAS\n",
      "OKC\n",
      "TOR\n",
      "UTA\n",
      "MEM\n",
      "WAS\n",
      "DET\n",
      "CHA\n"
     ]
    }
   ],
   "source": [
    "the_process = get_games(the_abreviations)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "af54de52",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_table = combine_dfs(the_process,True)\n",
    "\n",
    "away_table = combine_dfs(the_process,False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "1c829f81",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "lsst = []\n",
    "for i in away_table.columns:\n",
    "    lsst.append(\"away_\"+i)\n",
    "    \n",
    "dct={}\n",
    "for i in range(len(away_table.columns)):\n",
    "    dct[away_table.columns[i]] = lsst[i]\n",
    "    \n",
    "away_table = away_table.rename(dct,axis=1)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "8ae4956e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>away_TEAM_ID</th>\n",
       "      <th>away_MIN</th>\n",
       "      <th>away_PTS</th>\n",
       "      <th>away_FGM</th>\n",
       "      <th>away_FGA</th>\n",
       "      <th>away_FG_PCT</th>\n",
       "      <th>away_FG3M</th>\n",
       "      <th>away_FG3A</th>\n",
       "      <th>away_FG3_PCT</th>\n",
       "      <th>away_FTM</th>\n",
       "      <th>...</th>\n",
       "      <th>away_DREB</th>\n",
       "      <th>away_REB</th>\n",
       "      <th>away_AST</th>\n",
       "      <th>away_STL</th>\n",
       "      <th>away_BLK</th>\n",
       "      <th>away_TOV</th>\n",
       "      <th>away_PF</th>\n",
       "      <th>away_PLUS_MINUS</th>\n",
       "      <th>away_win</th>\n",
       "      <th>away_Regular_season</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>49928995436</td>\n",
       "      <td>7453.0</td>\n",
       "      <td>3407.0</td>\n",
       "      <td>1243.0</td>\n",
       "      <td>2740.0</td>\n",
       "      <td>14.0860</td>\n",
       "      <td>319.0</td>\n",
       "      <td>933.0</td>\n",
       "      <td>10.7400</td>\n",
       "      <td>602.0</td>\n",
       "      <td>...</td>\n",
       "      <td>989.0</td>\n",
       "      <td>1323.0</td>\n",
       "      <td>837.0</td>\n",
       "      <td>266.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>450.0</td>\n",
       "      <td>699.0</td>\n",
       "      <td>-102.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>51539607712</td>\n",
       "      <td>7718.0</td>\n",
       "      <td>3412.0</td>\n",
       "      <td>1263.0</td>\n",
       "      <td>2805.0</td>\n",
       "      <td>14.4520</td>\n",
       "      <td>392.0</td>\n",
       "      <td>1127.0</td>\n",
       "      <td>11.0370</td>\n",
       "      <td>494.0</td>\n",
       "      <td>...</td>\n",
       "      <td>971.0</td>\n",
       "      <td>1276.0</td>\n",
       "      <td>733.0</td>\n",
       "      <td>321.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>440.0</td>\n",
       "      <td>685.0</td>\n",
       "      <td>-156.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>32.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53150220321</td>\n",
       "      <td>8035.0</td>\n",
       "      <td>3105.0</td>\n",
       "      <td>1204.0</td>\n",
       "      <td>2658.0</td>\n",
       "      <td>14.9460</td>\n",
       "      <td>250.0</td>\n",
       "      <td>680.0</td>\n",
       "      <td>12.1440</td>\n",
       "      <td>447.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1006.0</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>712.0</td>\n",
       "      <td>283.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>448.0</td>\n",
       "      <td>590.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53150220354</td>\n",
       "      <td>7922.0</td>\n",
       "      <td>3021.0</td>\n",
       "      <td>1156.0</td>\n",
       "      <td>2510.0</td>\n",
       "      <td>15.2370</td>\n",
       "      <td>186.0</td>\n",
       "      <td>493.0</td>\n",
       "      <td>12.1850</td>\n",
       "      <td>523.0</td>\n",
       "      <td>...</td>\n",
       "      <td>971.0</td>\n",
       "      <td>1225.0</td>\n",
       "      <td>773.0</td>\n",
       "      <td>243.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>689.0</td>\n",
       "      <td>-90.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>53150220387</td>\n",
       "      <td>7990.0</td>\n",
       "      <td>3081.0</td>\n",
       "      <td>1126.0</td>\n",
       "      <td>2675.0</td>\n",
       "      <td>13.9430</td>\n",
       "      <td>212.0</td>\n",
       "      <td>634.0</td>\n",
       "      <td>11.0070</td>\n",
       "      <td>617.0</td>\n",
       "      <td>...</td>\n",
       "      <td>989.0</td>\n",
       "      <td>1402.0</td>\n",
       "      <td>608.0</td>\n",
       "      <td>248.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>507.0</td>\n",
       "      <td>688.0</td>\n",
       "      <td>-247.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>77309411904</td>\n",
       "      <td>11270.0</td>\n",
       "      <td>4384.0</td>\n",
       "      <td>1629.0</td>\n",
       "      <td>3675.0</td>\n",
       "      <td>21.3150</td>\n",
       "      <td>326.0</td>\n",
       "      <td>1021.0</td>\n",
       "      <td>15.2010</td>\n",
       "      <td>800.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1373.0</td>\n",
       "      <td>1829.0</td>\n",
       "      <td>950.0</td>\n",
       "      <td>380.0</td>\n",
       "      <td>214.0</td>\n",
       "      <td>683.0</td>\n",
       "      <td>977.0</td>\n",
       "      <td>-186.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>77309412000</td>\n",
       "      <td>11327.0</td>\n",
       "      <td>4874.0</td>\n",
       "      <td>1828.0</td>\n",
       "      <td>3997.0</td>\n",
       "      <td>21.9310</td>\n",
       "      <td>327.0</td>\n",
       "      <td>997.0</td>\n",
       "      <td>15.6090</td>\n",
       "      <td>891.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1425.0</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>1049.0</td>\n",
       "      <td>376.0</td>\n",
       "      <td>208.0</td>\n",
       "      <td>624.0</td>\n",
       "      <td>952.0</td>\n",
       "      <td>-195.6</td>\n",
       "      <td>15.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>77309412240</td>\n",
       "      <td>11300.5</td>\n",
       "      <td>4932.0</td>\n",
       "      <td>1810.0</td>\n",
       "      <td>4008.0</td>\n",
       "      <td>21.6965</td>\n",
       "      <td>494.5</td>\n",
       "      <td>1405.0</td>\n",
       "      <td>16.8115</td>\n",
       "      <td>817.5</td>\n",
       "      <td>...</td>\n",
       "      <td>1567.5</td>\n",
       "      <td>2067.0</td>\n",
       "      <td>1112.5</td>\n",
       "      <td>421.5</td>\n",
       "      <td>224.0</td>\n",
       "      <td>786.5</td>\n",
       "      <td>1082.0</td>\n",
       "      <td>-133.4</td>\n",
       "      <td>19.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>78920024652</td>\n",
       "      <td>11573.0</td>\n",
       "      <td>4760.0</td>\n",
       "      <td>1752.0</td>\n",
       "      <td>3632.0</td>\n",
       "      <td>23.5740</td>\n",
       "      <td>389.0</td>\n",
       "      <td>1083.0</td>\n",
       "      <td>17.5390</td>\n",
       "      <td>867.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1410.0</td>\n",
       "      <td>1776.0</td>\n",
       "      <td>1056.0</td>\n",
       "      <td>431.0</td>\n",
       "      <td>241.0</td>\n",
       "      <td>723.0</td>\n",
       "      <td>1033.0</td>\n",
       "      <td>168.0</td>\n",
       "      <td>27.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>221</th>\n",
       "      <td>78920024799</td>\n",
       "      <td>11496.0</td>\n",
       "      <td>4587.0</td>\n",
       "      <td>1760.0</td>\n",
       "      <td>4095.0</td>\n",
       "      <td>20.9920</td>\n",
       "      <td>294.0</td>\n",
       "      <td>902.0</td>\n",
       "      <td>16.0660</td>\n",
       "      <td>773.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1519.0</td>\n",
       "      <td>2065.0</td>\n",
       "      <td>991.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>208.0</td>\n",
       "      <td>682.0</td>\n",
       "      <td>916.0</td>\n",
       "      <td>-442.8</td>\n",
       "      <td>9.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>222 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     away_TEAM_ID  away_MIN  away_PTS  away_FGM  away_FGA  away_FG_PCT  \\\n",
       "0     49928995436    7453.0    3407.0    1243.0    2740.0      14.0860   \n",
       "1     51539607712    7718.0    3412.0    1263.0    2805.0      14.4520   \n",
       "2     53150220321    8035.0    3105.0    1204.0    2658.0      14.9460   \n",
       "3     53150220354    7922.0    3021.0    1156.0    2510.0      15.2370   \n",
       "4     53150220387    7990.0    3081.0    1126.0    2675.0      13.9430   \n",
       "..            ...       ...       ...       ...       ...          ...   \n",
       "217   77309411904   11270.0    4384.0    1629.0    3675.0      21.3150   \n",
       "218   77309412000   11327.0    4874.0    1828.0    3997.0      21.9310   \n",
       "219   77309412240   11300.5    4932.0    1810.0    4008.0      21.6965   \n",
       "220   78920024652   11573.0    4760.0    1752.0    3632.0      23.5740   \n",
       "221   78920024799   11496.0    4587.0    1760.0    4095.0      20.9920   \n",
       "\n",
       "     away_FG3M  away_FG3A  away_FG3_PCT  away_FTM  ...  away_DREB  away_REB  \\\n",
       "0        319.0      933.0       10.7400     602.0  ...      989.0    1323.0   \n",
       "1        392.0     1127.0       11.0370     494.0  ...      971.0    1276.0   \n",
       "2        250.0      680.0       12.1440     447.0  ...     1006.0    1320.0   \n",
       "3        186.0      493.0       12.1850     523.0  ...      971.0    1225.0   \n",
       "4        212.0      634.0       11.0070     617.0  ...      989.0    1402.0   \n",
       "..         ...        ...           ...       ...  ...        ...       ...   \n",
       "217      326.0     1021.0       15.2010     800.0  ...     1373.0    1829.0   \n",
       "218      327.0      997.0       15.6090     891.0  ...     1425.0    1964.0   \n",
       "219      494.5     1405.0       16.8115     817.5  ...     1567.5    2067.0   \n",
       "220      389.0     1083.0       17.5390     867.0  ...     1410.0    1776.0   \n",
       "221      294.0      902.0       16.0660     773.0  ...     1519.0    2065.0   \n",
       "\n",
       "     away_AST  away_STL  away_BLK  away_TOV  away_PF  away_PLUS_MINUS  \\\n",
       "0       837.0     266.0     116.0     450.0    699.0           -102.0   \n",
       "1       733.0     321.0     115.0     440.0    685.0           -156.0   \n",
       "2       712.0     283.0     145.0     448.0    590.0             66.0   \n",
       "3       773.0     243.0     192.0     476.0    689.0            -90.0   \n",
       "4       608.0     248.0     117.0     507.0    688.0           -247.0   \n",
       "..        ...       ...       ...       ...      ...              ...   \n",
       "217     950.0     380.0     214.0     683.0    977.0           -186.0   \n",
       "218    1049.0     376.0     208.0     624.0    952.0           -195.6   \n",
       "219    1112.5     421.5     224.0     786.5   1082.0           -133.4   \n",
       "220    1056.0     431.0     241.0     723.0   1033.0            168.0   \n",
       "221     991.0     390.0     208.0     682.0    916.0           -442.8   \n",
       "\n",
       "     away_win  away_Regular_season  \n",
       "0        13.0                 31.0  \n",
       "1         8.0                 32.0  \n",
       "2        17.0                 33.0  \n",
       "3        15.0                 33.0  \n",
       "4        10.0                 33.0  \n",
       "..        ...                  ...  \n",
       "217      18.0                 48.0  \n",
       "218      15.0                 48.0  \n",
       "219      19.0                 48.0  \n",
       "220      27.0                 49.0  \n",
       "221       9.0                 49.0  \n",
       "\n",
       "[222 rows x 23 columns]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_away = away_table.groupby(\"away_TEAM_ID\").agg(np.mean).reset_index()\n",
    "grouped_away"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "68000498",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TEAM_ID</th>\n",
       "      <th>MIN</th>\n",
       "      <th>PTS</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FG_PCT</th>\n",
       "      <th>FG3M</th>\n",
       "      <th>FG3A</th>\n",
       "      <th>FG3_PCT</th>\n",
       "      <th>FTM</th>\n",
       "      <th>...</th>\n",
       "      <th>DREB</th>\n",
       "      <th>REB</th>\n",
       "      <th>AST</th>\n",
       "      <th>STL</th>\n",
       "      <th>BLK</th>\n",
       "      <th>TOV</th>\n",
       "      <th>PF</th>\n",
       "      <th>PLUS_MINUS</th>\n",
       "      <th>win</th>\n",
       "      <th>Regular_season</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53150220321</td>\n",
       "      <td>8122.0</td>\n",
       "      <td>3270.0</td>\n",
       "      <td>1225.0</td>\n",
       "      <td>2690.0</td>\n",
       "      <td>15.0580</td>\n",
       "      <td>242.0</td>\n",
       "      <td>650.0</td>\n",
       "      <td>12.3900</td>\n",
       "      <td>578.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1060.0</td>\n",
       "      <td>1398.0</td>\n",
       "      <td>769.0</td>\n",
       "      <td>253.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>427.0</td>\n",
       "      <td>588.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53150220354</td>\n",
       "      <td>8024.0</td>\n",
       "      <td>3041.0</td>\n",
       "      <td>1185.0</td>\n",
       "      <td>2576.0</td>\n",
       "      <td>15.2520</td>\n",
       "      <td>177.0</td>\n",
       "      <td>495.0</td>\n",
       "      <td>11.6450</td>\n",
       "      <td>494.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1080.0</td>\n",
       "      <td>1335.0</td>\n",
       "      <td>784.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>453.0</td>\n",
       "      <td>626.0</td>\n",
       "      <td>255.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53150220387</td>\n",
       "      <td>7972.0</td>\n",
       "      <td>3059.0</td>\n",
       "      <td>1135.0</td>\n",
       "      <td>2685.0</td>\n",
       "      <td>13.9800</td>\n",
       "      <td>228.0</td>\n",
       "      <td>639.0</td>\n",
       "      <td>11.6950</td>\n",
       "      <td>561.0</td>\n",
       "      <td>...</td>\n",
       "      <td>960.0</td>\n",
       "      <td>1388.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>218.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>458.0</td>\n",
       "      <td>629.0</td>\n",
       "      <td>-228.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53150220420</td>\n",
       "      <td>7972.0</td>\n",
       "      <td>2946.0</td>\n",
       "      <td>1152.0</td>\n",
       "      <td>2564.0</td>\n",
       "      <td>14.9090</td>\n",
       "      <td>126.0</td>\n",
       "      <td>405.0</td>\n",
       "      <td>10.4330</td>\n",
       "      <td>516.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1003.0</td>\n",
       "      <td>1376.0</td>\n",
       "      <td>711.0</td>\n",
       "      <td>236.0</td>\n",
       "      <td>176.0</td>\n",
       "      <td>465.0</td>\n",
       "      <td>643.0</td>\n",
       "      <td>-91.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>53150220453</td>\n",
       "      <td>7977.0</td>\n",
       "      <td>3166.0</td>\n",
       "      <td>1223.0</td>\n",
       "      <td>2753.0</td>\n",
       "      <td>14.6930</td>\n",
       "      <td>200.0</td>\n",
       "      <td>567.0</td>\n",
       "      <td>11.5620</td>\n",
       "      <td>520.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1082.0</td>\n",
       "      <td>1579.0</td>\n",
       "      <td>780.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>225.0</td>\n",
       "      <td>408.0</td>\n",
       "      <td>565.0</td>\n",
       "      <td>268.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>75698799673</td>\n",
       "      <td>11071.0</td>\n",
       "      <td>4840.0</td>\n",
       "      <td>1831.0</td>\n",
       "      <td>3905.0</td>\n",
       "      <td>22.0330</td>\n",
       "      <td>419.0</td>\n",
       "      <td>1181.0</td>\n",
       "      <td>16.7160</td>\n",
       "      <td>759.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1562.0</td>\n",
       "      <td>2030.0</td>\n",
       "      <td>1050.0</td>\n",
       "      <td>361.0</td>\n",
       "      <td>270.0</td>\n",
       "      <td>601.0</td>\n",
       "      <td>833.0</td>\n",
       "      <td>308.6</td>\n",
       "      <td>36.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>75698799814</td>\n",
       "      <td>11133.0</td>\n",
       "      <td>4578.0</td>\n",
       "      <td>1649.0</td>\n",
       "      <td>3625.0</td>\n",
       "      <td>21.4275</td>\n",
       "      <td>431.5</td>\n",
       "      <td>1171.5</td>\n",
       "      <td>17.2645</td>\n",
       "      <td>848.5</td>\n",
       "      <td>...</td>\n",
       "      <td>1577.0</td>\n",
       "      <td>2019.5</td>\n",
       "      <td>840.5</td>\n",
       "      <td>342.0</td>\n",
       "      <td>223.0</td>\n",
       "      <td>648.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>224.8</td>\n",
       "      <td>28.5</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>77309411760</td>\n",
       "      <td>11267.0</td>\n",
       "      <td>4813.0</td>\n",
       "      <td>1688.0</td>\n",
       "      <td>3858.0</td>\n",
       "      <td>21.0260</td>\n",
       "      <td>539.0</td>\n",
       "      <td>1546.0</td>\n",
       "      <td>16.6760</td>\n",
       "      <td>898.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1504.0</td>\n",
       "      <td>2035.0</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>470.0</td>\n",
       "      <td>238.0</td>\n",
       "      <td>784.0</td>\n",
       "      <td>1040.0</td>\n",
       "      <td>250.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219</th>\n",
       "      <td>78920025191</td>\n",
       "      <td>11453.0</td>\n",
       "      <td>4939.0</td>\n",
       "      <td>1880.0</td>\n",
       "      <td>3971.0</td>\n",
       "      <td>23.1350</td>\n",
       "      <td>347.0</td>\n",
       "      <td>936.0</td>\n",
       "      <td>18.4230</td>\n",
       "      <td>832.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1668.0</td>\n",
       "      <td>2144.0</td>\n",
       "      <td>1150.0</td>\n",
       "      <td>418.0</td>\n",
       "      <td>293.0</td>\n",
       "      <td>620.0</td>\n",
       "      <td>903.0</td>\n",
       "      <td>588.6</td>\n",
       "      <td>46.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>220</th>\n",
       "      <td>80530637100</td>\n",
       "      <td>11732.0</td>\n",
       "      <td>5038.0</td>\n",
       "      <td>1848.0</td>\n",
       "      <td>4195.0</td>\n",
       "      <td>22.0800</td>\n",
       "      <td>553.0</td>\n",
       "      <td>1571.0</td>\n",
       "      <td>17.5680</td>\n",
       "      <td>789.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1651.0</td>\n",
       "      <td>2083.0</td>\n",
       "      <td>1075.0</td>\n",
       "      <td>385.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>588.0</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>50.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>221 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         TEAM_ID      MIN     PTS     FGM     FGA   FG_PCT   FG3M    FG3A  \\\n",
       "0    53150220321   8122.0  3270.0  1225.0  2690.0  15.0580  242.0   650.0   \n",
       "1    53150220354   8024.0  3041.0  1185.0  2576.0  15.2520  177.0   495.0   \n",
       "2    53150220387   7972.0  3059.0  1135.0  2685.0  13.9800  228.0   639.0   \n",
       "3    53150220420   7972.0  2946.0  1152.0  2564.0  14.9090  126.0   405.0   \n",
       "4    53150220453   7977.0  3166.0  1223.0  2753.0  14.6930  200.0   567.0   \n",
       "..           ...      ...     ...     ...     ...      ...    ...     ...   \n",
       "216  75698799673  11071.0  4840.0  1831.0  3905.0  22.0330  419.0  1181.0   \n",
       "217  75698799814  11133.0  4578.0  1649.0  3625.0  21.4275  431.5  1171.5   \n",
       "218  77309411760  11267.0  4813.0  1688.0  3858.0  21.0260  539.0  1546.0   \n",
       "219  78920025191  11453.0  4939.0  1880.0  3971.0  23.1350  347.0   936.0   \n",
       "220  80530637100  11732.0  5038.0  1848.0  4195.0  22.0800  553.0  1571.0   \n",
       "\n",
       "     FG3_PCT    FTM  ...    DREB     REB     AST    STL    BLK    TOV      PF  \\\n",
       "0    12.3900  578.0  ...  1060.0  1398.0   769.0  253.0  158.0  427.0   588.0   \n",
       "1    11.6450  494.0  ...  1080.0  1335.0   784.0  255.0  170.0  453.0   626.0   \n",
       "2    11.6950  561.0  ...   960.0  1388.0   700.0  218.0  145.0  458.0   629.0   \n",
       "3    10.4330  516.0  ...  1003.0  1376.0   711.0  236.0  176.0  465.0   643.0   \n",
       "4    11.5620  520.0  ...  1082.0  1579.0   780.0  220.0  225.0  408.0   565.0   \n",
       "..       ...    ...  ...     ...     ...     ...    ...    ...    ...     ...   \n",
       "216  16.7160  759.0  ...  1562.0  2030.0  1050.0  361.0  270.0  601.0   833.0   \n",
       "217  17.2645  848.5  ...  1577.0  2019.5   840.5  342.0  223.0  648.0   900.0   \n",
       "218  16.6760  898.0  ...  1504.0  2035.0  1008.0  470.0  238.0  784.0  1040.0   \n",
       "219  18.4230  832.0  ...  1668.0  2144.0  1150.0  418.0  293.0  620.0   903.0   \n",
       "220  17.5680  789.0  ...  1651.0  2083.0  1075.0  385.0  192.0  588.0  1008.0   \n",
       "\n",
       "     PLUS_MINUS   win  Regular_season  \n",
       "0         161.0  23.0            33.0  \n",
       "1         255.0  24.0            33.0  \n",
       "2        -228.0  11.0            33.0  \n",
       "3         -91.0  11.0            33.0  \n",
       "4         268.0  26.0            33.0  \n",
       "..          ...   ...             ...  \n",
       "216       308.6  36.0            47.0  \n",
       "217       224.8  28.5            47.0  \n",
       "218       250.0  34.0            48.0  \n",
       "219       588.6  46.0            49.0  \n",
       "220        64.0  23.0            50.0  \n",
       "\n",
       "[221 rows x 23 columns]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_home = home_table.groupby(\"TEAM_ID\").agg(np.mean).reset_index()\n",
    "grouped_home"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "c2180106",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TEAM_ID</th>\n",
       "      <th>MIN</th>\n",
       "      <th>PTS</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FG_PCT</th>\n",
       "      <th>FG3M</th>\n",
       "      <th>FG3A</th>\n",
       "      <th>FG3_PCT</th>\n",
       "      <th>FTM</th>\n",
       "      <th>...</th>\n",
       "      <th>away_DREB</th>\n",
       "      <th>away_REB</th>\n",
       "      <th>away_AST</th>\n",
       "      <th>away_STL</th>\n",
       "      <th>away_BLK</th>\n",
       "      <th>away_TOV</th>\n",
       "      <th>away_PF</th>\n",
       "      <th>away_PLUS_MINUS</th>\n",
       "      <th>away_win</th>\n",
       "      <th>away_Regular_season</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>53150220321</td>\n",
       "      <td>8122.0</td>\n",
       "      <td>3270.0</td>\n",
       "      <td>1225.0</td>\n",
       "      <td>2690.0</td>\n",
       "      <td>15.0580</td>\n",
       "      <td>242.0</td>\n",
       "      <td>650.0</td>\n",
       "      <td>12.3900</td>\n",
       "      <td>578.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1006.0</td>\n",
       "      <td>1320.0</td>\n",
       "      <td>712.0</td>\n",
       "      <td>283.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>448.0</td>\n",
       "      <td>590.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>53150220354</td>\n",
       "      <td>8024.0</td>\n",
       "      <td>3041.0</td>\n",
       "      <td>1185.0</td>\n",
       "      <td>2576.0</td>\n",
       "      <td>15.2520</td>\n",
       "      <td>177.0</td>\n",
       "      <td>495.0</td>\n",
       "      <td>11.6450</td>\n",
       "      <td>494.0</td>\n",
       "      <td>...</td>\n",
       "      <td>971.0</td>\n",
       "      <td>1225.0</td>\n",
       "      <td>773.0</td>\n",
       "      <td>243.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>476.0</td>\n",
       "      <td>689.0</td>\n",
       "      <td>-90.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>53150220387</td>\n",
       "      <td>7972.0</td>\n",
       "      <td>3059.0</td>\n",
       "      <td>1135.0</td>\n",
       "      <td>2685.0</td>\n",
       "      <td>13.9800</td>\n",
       "      <td>228.0</td>\n",
       "      <td>639.0</td>\n",
       "      <td>11.6950</td>\n",
       "      <td>561.0</td>\n",
       "      <td>...</td>\n",
       "      <td>989.0</td>\n",
       "      <td>1402.0</td>\n",
       "      <td>608.0</td>\n",
       "      <td>248.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>507.0</td>\n",
       "      <td>688.0</td>\n",
       "      <td>-247.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53150220420</td>\n",
       "      <td>7972.0</td>\n",
       "      <td>2946.0</td>\n",
       "      <td>1152.0</td>\n",
       "      <td>2564.0</td>\n",
       "      <td>14.9090</td>\n",
       "      <td>126.0</td>\n",
       "      <td>405.0</td>\n",
       "      <td>10.4330</td>\n",
       "      <td>516.0</td>\n",
       "      <td>...</td>\n",
       "      <td>988.0</td>\n",
       "      <td>1339.0</td>\n",
       "      <td>657.0</td>\n",
       "      <td>252.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>681.0</td>\n",
       "      <td>-157.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>53150220453</td>\n",
       "      <td>7977.0</td>\n",
       "      <td>3166.0</td>\n",
       "      <td>1223.0</td>\n",
       "      <td>2753.0</td>\n",
       "      <td>14.6930</td>\n",
       "      <td>200.0</td>\n",
       "      <td>567.0</td>\n",
       "      <td>11.5620</td>\n",
       "      <td>520.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1083.0</td>\n",
       "      <td>1501.0</td>\n",
       "      <td>747.0</td>\n",
       "      <td>236.0</td>\n",
       "      <td>163.0</td>\n",
       "      <td>479.0</td>\n",
       "      <td>574.0</td>\n",
       "      <td>272.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>74088186224</td>\n",
       "      <td>10853.5</td>\n",
       "      <td>4875.5</td>\n",
       "      <td>1796.0</td>\n",
       "      <td>3842.5</td>\n",
       "      <td>21.2960</td>\n",
       "      <td>355.5</td>\n",
       "      <td>949.5</td>\n",
       "      <td>16.7890</td>\n",
       "      <td>928.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1616.0</td>\n",
       "      <td>2031.5</td>\n",
       "      <td>1224.5</td>\n",
       "      <td>376.5</td>\n",
       "      <td>298.0</td>\n",
       "      <td>680.0</td>\n",
       "      <td>950.5</td>\n",
       "      <td>227.4</td>\n",
       "      <td>33.5</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>74088186408</td>\n",
       "      <td>10959.0</td>\n",
       "      <td>4648.0</td>\n",
       "      <td>1742.0</td>\n",
       "      <td>3764.0</td>\n",
       "      <td>21.2885</td>\n",
       "      <td>382.5</td>\n",
       "      <td>1110.0</td>\n",
       "      <td>15.8095</td>\n",
       "      <td>781.5</td>\n",
       "      <td>...</td>\n",
       "      <td>1479.5</td>\n",
       "      <td>1969.0</td>\n",
       "      <td>942.5</td>\n",
       "      <td>324.0</td>\n",
       "      <td>270.0</td>\n",
       "      <td>598.5</td>\n",
       "      <td>908.5</td>\n",
       "      <td>-62.2</td>\n",
       "      <td>22.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>74088186730</td>\n",
       "      <td>10913.0</td>\n",
       "      <td>4310.0</td>\n",
       "      <td>1563.0</td>\n",
       "      <td>3742.0</td>\n",
       "      <td>19.2930</td>\n",
       "      <td>378.0</td>\n",
       "      <td>1182.0</td>\n",
       "      <td>14.5840</td>\n",
       "      <td>806.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1476.0</td>\n",
       "      <td>1904.0</td>\n",
       "      <td>904.0</td>\n",
       "      <td>373.0</td>\n",
       "      <td>289.0</td>\n",
       "      <td>736.0</td>\n",
       "      <td>1062.0</td>\n",
       "      <td>-464.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>75698799156</td>\n",
       "      <td>11140.0</td>\n",
       "      <td>4790.0</td>\n",
       "      <td>1789.0</td>\n",
       "      <td>3883.0</td>\n",
       "      <td>21.5790</td>\n",
       "      <td>478.0</td>\n",
       "      <td>1276.0</td>\n",
       "      <td>17.4520</td>\n",
       "      <td>734.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1607.0</td>\n",
       "      <td>2064.5</td>\n",
       "      <td>1077.0</td>\n",
       "      <td>359.0</td>\n",
       "      <td>244.0</td>\n",
       "      <td>669.0</td>\n",
       "      <td>977.0</td>\n",
       "      <td>-38.8</td>\n",
       "      <td>22.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>75698799673</td>\n",
       "      <td>11071.0</td>\n",
       "      <td>4840.0</td>\n",
       "      <td>1831.0</td>\n",
       "      <td>3905.0</td>\n",
       "      <td>22.0330</td>\n",
       "      <td>419.0</td>\n",
       "      <td>1181.0</td>\n",
       "      <td>16.7160</td>\n",
       "      <td>759.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1592.0</td>\n",
       "      <td>2045.0</td>\n",
       "      <td>1083.0</td>\n",
       "      <td>292.0</td>\n",
       "      <td>232.0</td>\n",
       "      <td>582.0</td>\n",
       "      <td>896.0</td>\n",
       "      <td>-192.6</td>\n",
       "      <td>17.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>174 rows × 46 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         TEAM_ID      MIN     PTS     FGM     FGA   FG_PCT   FG3M    FG3A  \\\n",
       "0    53150220321   8122.0  3270.0  1225.0  2690.0  15.0580  242.0   650.0   \n",
       "1    53150220354   8024.0  3041.0  1185.0  2576.0  15.2520  177.0   495.0   \n",
       "2    53150220387   7972.0  3059.0  1135.0  2685.0  13.9800  228.0   639.0   \n",
       "3    53150220420   7972.0  2946.0  1152.0  2564.0  14.9090  126.0   405.0   \n",
       "4    53150220453   7977.0  3166.0  1223.0  2753.0  14.6930  200.0   567.0   \n",
       "..           ...      ...     ...     ...     ...      ...    ...     ...   \n",
       "169  74088186224  10853.5  4875.5  1796.0  3842.5  21.2960  355.5   949.5   \n",
       "170  74088186408  10959.0  4648.0  1742.0  3764.0  21.2885  382.5  1110.0   \n",
       "171  74088186730  10913.0  4310.0  1563.0  3742.0  19.2930  378.0  1182.0   \n",
       "172  75698799156  11140.0  4790.0  1789.0  3883.0  21.5790  478.0  1276.0   \n",
       "173  75698799673  11071.0  4840.0  1831.0  3905.0  22.0330  419.0  1181.0   \n",
       "\n",
       "     FG3_PCT    FTM  ...  away_DREB  away_REB  away_AST  away_STL  away_BLK  \\\n",
       "0    12.3900  578.0  ...     1006.0    1320.0     712.0     283.0     145.0   \n",
       "1    11.6450  494.0  ...      971.0    1225.0     773.0     243.0     192.0   \n",
       "2    11.6950  561.0  ...      989.0    1402.0     608.0     248.0     117.0   \n",
       "3    10.4330  516.0  ...      988.0    1339.0     657.0     252.0     140.0   \n",
       "4    11.5620  520.0  ...     1083.0    1501.0     747.0     236.0     163.0   \n",
       "..       ...    ...  ...        ...       ...       ...       ...       ...   \n",
       "169  16.7890  928.0  ...     1616.0    2031.5    1224.5     376.5     298.0   \n",
       "170  15.8095  781.5  ...     1479.5    1969.0     942.5     324.0     270.0   \n",
       "171  14.5840  806.0  ...     1476.0    1904.0     904.0     373.0     289.0   \n",
       "172  17.4520  734.0  ...     1607.0    2064.5    1077.0     359.0     244.0   \n",
       "173  16.7160  759.0  ...     1592.0    2045.0    1083.0     292.0     232.0   \n",
       "\n",
       "     away_TOV  away_PF  away_PLUS_MINUS  away_win  away_Regular_season  \n",
       "0       448.0    590.0             66.0      17.0                 33.0  \n",
       "1       476.0    689.0            -90.0      15.0                 33.0  \n",
       "2       507.0    688.0           -247.0      10.0                 33.0  \n",
       "3       500.0    681.0           -157.0      10.0                 33.0  \n",
       "4       479.0    574.0            272.0      24.0                 33.0  \n",
       "..        ...      ...              ...       ...                  ...  \n",
       "169     680.0    950.5            227.4      33.5                 46.0  \n",
       "170     598.5    908.5            -62.2      22.0                 46.0  \n",
       "171     736.0   1062.0           -464.6       4.0                 46.0  \n",
       "172     669.0    977.0            -38.8      22.0                 47.0  \n",
       "173     582.0    896.0           -192.6      17.0                 47.0  \n",
       "\n",
       "[174 rows x 46 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged_table = grouped_home.merge(grouped_away,left_on=\"TEAM_ID\",right_on=\"away_TEAM_ID\")\n",
    "merged_table"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8c8b490",
   "metadata": {},
   "source": [
    "#### Creating the features\n",
    "\n",
    "We said the following matter: \n",
    "\n",
    "\n",
    "    1) Team Plus Minus per game\n",
    "\n",
    "    2) Rebounds per game \n",
    "\n",
    "    3) Blocks per game \n",
    "\n",
    "    4) Points per game \n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "2d333147",
   "metadata": {},
   "outputs": [],
   "source": [
    "the_table_created = pd.DataFrame()\n",
    "the_table_created[\"PPG_away\"] = merged_table[\"away_PTS\"]/merged_table[\"away_Regular_season\"]\n",
    "the_table_created[\"PPG_home\"] = merged_table[\"PTS\"]/merged_table[\"Regular_season\"]\n",
    "\n",
    "the_table_created[\"RPG_home\"] = merged_table[\"away_REB\"]/merged_table[\"away_Regular_season\"]\n",
    "the_table_created[\"RPG_away\"] = merged_table[\"REB\"]/merged_table[\"Regular_season\"]\n",
    "\n",
    "\n",
    "\n",
    "the_table_created[\"plusminus_home\"] = merged_table[\"away_PLUS_MINUS\"]/merged_table[\"away_Regular_season\"]\n",
    "the_table_created[\"plusminus_away\"] = merged_table[\"PLUS_MINUS\"]/merged_table[\"Regular_season\"]\n",
    "\n",
    "\n",
    "the_table_created[\"BLK_home\"] = merged_table[\"away_BLK\"]/merged_table[\"away_Regular_season\"]\n",
    "the_table_created[\"BLK_away\"] = merged_table[\"BLK\"]/merged_table[\"Regular_season\"]\n",
    "\n",
    "\n",
    "the_table_created[\"test_stat\"]= (merged_table[\"win\"]/merged_table[\"Regular_season\"]) - (merged_table[\"away_win\"]/merged_table[\"away_Regular_season\"])\n",
    "the_table_created[\"TEAM\"] = merged_table[\"TEAM_ID\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "5fb3c72c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "      <th>test_stat</th>\n",
       "      <th>TEAM</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>94.090909</td>\n",
       "      <td>99.090909</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>42.363636</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.878788</td>\n",
       "      <td>4.393939</td>\n",
       "      <td>4.787879</td>\n",
       "      <td>0.181818</td>\n",
       "      <td>53150220321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>91.545455</td>\n",
       "      <td>92.151515</td>\n",
       "      <td>37.121212</td>\n",
       "      <td>40.454545</td>\n",
       "      <td>-2.727273</td>\n",
       "      <td>7.727273</td>\n",
       "      <td>5.818182</td>\n",
       "      <td>5.151515</td>\n",
       "      <td>0.272727</td>\n",
       "      <td>53150220354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>93.363636</td>\n",
       "      <td>92.696970</td>\n",
       "      <td>42.484848</td>\n",
       "      <td>42.060606</td>\n",
       "      <td>-7.484848</td>\n",
       "      <td>-6.909091</td>\n",
       "      <td>3.545455</td>\n",
       "      <td>4.393939</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>53150220387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>90.000000</td>\n",
       "      <td>89.272727</td>\n",
       "      <td>40.575758</td>\n",
       "      <td>41.696970</td>\n",
       "      <td>-4.757576</td>\n",
       "      <td>-2.757576</td>\n",
       "      <td>4.242424</td>\n",
       "      <td>5.333333</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>53150220420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>96.757576</td>\n",
       "      <td>95.939394</td>\n",
       "      <td>45.484848</td>\n",
       "      <td>47.848485</td>\n",
       "      <td>8.242424</td>\n",
       "      <td>8.121212</td>\n",
       "      <td>4.939394</td>\n",
       "      <td>6.818182</td>\n",
       "      <td>0.060606</td>\n",
       "      <td>53150220453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>109.956522</td>\n",
       "      <td>105.989130</td>\n",
       "      <td>44.163043</td>\n",
       "      <td>42.978261</td>\n",
       "      <td>4.943478</td>\n",
       "      <td>4.636957</td>\n",
       "      <td>6.478261</td>\n",
       "      <td>5.641304</td>\n",
       "      <td>-0.119565</td>\n",
       "      <td>74088186224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>96.391304</td>\n",
       "      <td>101.043478</td>\n",
       "      <td>42.804348</td>\n",
       "      <td>42.891304</td>\n",
       "      <td>-1.352174</td>\n",
       "      <td>3.136957</td>\n",
       "      <td>5.869565</td>\n",
       "      <td>5.728261</td>\n",
       "      <td>0.163043</td>\n",
       "      <td>74088186408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>94.782609</td>\n",
       "      <td>93.695652</td>\n",
       "      <td>41.391304</td>\n",
       "      <td>42.760870</td>\n",
       "      <td>-10.100000</td>\n",
       "      <td>-3.804348</td>\n",
       "      <td>6.282609</td>\n",
       "      <td>6.130435</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>74088186730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>101.234043</td>\n",
       "      <td>101.914894</td>\n",
       "      <td>43.925532</td>\n",
       "      <td>42.170213</td>\n",
       "      <td>-0.825532</td>\n",
       "      <td>2.723404</td>\n",
       "      <td>5.191489</td>\n",
       "      <td>5.510638</td>\n",
       "      <td>0.063830</td>\n",
       "      <td>75698799156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>106.489362</td>\n",
       "      <td>102.978723</td>\n",
       "      <td>43.510638</td>\n",
       "      <td>43.191489</td>\n",
       "      <td>-4.097872</td>\n",
       "      <td>6.565957</td>\n",
       "      <td>4.936170</td>\n",
       "      <td>5.744681</td>\n",
       "      <td>0.404255</td>\n",
       "      <td>75698799673</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>174 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "0     94.090909   99.090909  40.000000  42.363636        2.000000   \n",
       "1     91.545455   92.151515  37.121212  40.454545       -2.727273   \n",
       "2     93.363636   92.696970  42.484848  42.060606       -7.484848   \n",
       "3     90.000000   89.272727  40.575758  41.696970       -4.757576   \n",
       "4     96.757576   95.939394  45.484848  47.848485        8.242424   \n",
       "..          ...         ...        ...        ...             ...   \n",
       "169  109.956522  105.989130  44.163043  42.978261        4.943478   \n",
       "170   96.391304  101.043478  42.804348  42.891304       -1.352174   \n",
       "171   94.782609   93.695652  41.391304  42.760870      -10.100000   \n",
       "172  101.234043  101.914894  43.925532  42.170213       -0.825532   \n",
       "173  106.489362  102.978723  43.510638  43.191489       -4.097872   \n",
       "\n",
       "     plusminus_away  BLK_home  BLK_away  test_stat         TEAM  \n",
       "0          4.878788  4.393939  4.787879   0.181818  53150220321  \n",
       "1          7.727273  5.818182  5.151515   0.272727  53150220354  \n",
       "2         -6.909091  3.545455  4.393939   0.030303  53150220387  \n",
       "3         -2.757576  4.242424  5.333333   0.030303  53150220420  \n",
       "4          8.121212  4.939394  6.818182   0.060606  53150220453  \n",
       "..              ...       ...       ...        ...          ...  \n",
       "169        4.636957  6.478261  5.641304  -0.119565  74088186224  \n",
       "170        3.136957  5.869565  5.728261   0.163043  74088186408  \n",
       "171       -3.804348  6.282609  6.130435   0.239130  74088186730  \n",
       "172        2.723404  5.191489  5.510638   0.063830  75698799156  \n",
       "173        6.565957  4.936170  5.744681   0.404255  75698799673  \n",
       "\n",
       "[174 rows x 10 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "the_table_created"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "20eaf696",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.18325286,  0.15554704,  0.12010953,  0.34190859,  0.18820872,\n",
       "        0.22208813,  0.22835528,  0.22149571,  0.07444477,  0.08308224,\n",
       "        0.07444776,  0.12693957,  0.08562766,  0.14589079,  0.22694488,\n",
       "        0.1912438 ,  0.16278496,  0.27389166,  0.34849262,  0.16292768,\n",
       "        0.12047047,  0.23732919,  0.18905669,  0.12042086,  0.11923663,\n",
       "        0.17987203,  0.21494516,  0.18698107,  0.27399928,  0.1381106 ,\n",
       "        0.08500723,  0.14172968,  0.15771389,  0.17189571,  0.18636257,\n",
       "        0.14910974,  0.27513177,  0.23494736,  0.04936971,  0.14391556,\n",
       "        0.03885846,  0.12927101,  0.26929171,  0.21820857,  0.13846695,\n",
       "        0.17921405,  0.21474484,  0.25726554,  0.45676546,  0.17727196,\n",
       "        0.15650872,  0.30857671, -0.00911574])"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X = the_table_created.drop([\"TEAM\",\"test_stat\"],axis=1)\n",
    "\n",
    "Y = the_table_created[\"test_stat\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30)\n",
    "\n",
    "regr = RandomForestRegressor(max_depth=3, n_estimators=100)\n",
    "\n",
    "\n",
    "regr.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "regr.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "85720dfd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08992568244355063"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "mean_squared_error(y_test, regr.predict(X_test), squared=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "007e512a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.007827061630047961"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "cross_val_score(regr, X, Y, cv=5,scoring=\"neg_mean_squared_error\")\n",
    "np.mean(cross_val_score(regr, X, Y, cv=5,scoring=\"neg_mean_squared_error\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7725b17f",
   "metadata": {},
   "source": [
    "### Using this to predict 2021 difference in home and away win proportion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "52108ba1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_games(abbreviation_lst):\n",
    "    nba_teams = teams.get_teams()\n",
    "    the_tracker = {}\n",
    "    for i in abbreviation_lst:\n",
    "        team = [team for team in nba_teams if team['abbreviation'] == i][0]\n",
    "        team_id = team['id']\n",
    "        ## get all the games\n",
    "        time.sleep(2)\n",
    "        game_finder_two = leaguegamefinder.LeagueGameFinder(team_id_nullable=team_id)\n",
    "        ## Storing games in the following: {team_1:[home_df,away_df],team2:[home_df,away_df]}\n",
    "        games_two = game_finder_two.get_data_frames()[0]\n",
    "        isolated_dates = games_two[(games_two.GAME_DATE >= '2021-08-16') & (games_two.GAME_DATE < '2022-06-16')]\n",
    "        away_games = keep_games(isolated_dates,keep_method=\"away\")\n",
    "        home_games = keep_games(isolated_dates,keep_method=\"home\")\n",
    "        for_away = clean_wins(away_games)\n",
    "        for_home = clean_wins(home_games)\n",
    "        reg_away = reg(for_away)\n",
    "        reg_home = reg(for_home)\n",
    "        grouped_home = grouper(reg_home)\n",
    "        grouped_away = grouper(reg_away)\n",
    "        the_tracker[i]= [grouped_home,grouped_away]\n",
    "        print(i)\n",
    "    return the_tracker\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "264a4868",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_117/242278372.py:35: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df[\"win\"] = [1 if i==\"W\" else 0 for i in df[\"WL\"]]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ATL\n",
      "BOS\n",
      "CLE\n",
      "NOP\n",
      "CHI\n",
      "DAL\n",
      "DEN\n",
      "GSW\n",
      "HOU\n",
      "LAC\n",
      "LAL\n",
      "MIA\n",
      "MIL\n",
      "MIN\n",
      "BKN\n",
      "NYK\n",
      "ORL\n",
      "IND\n",
      "PHI\n",
      "PHX\n",
      "POR\n",
      "SAC\n",
      "SAS\n",
      "OKC\n",
      "TOR\n",
      "UTA\n",
      "MEM\n",
      "WAS\n",
      "DET\n",
      "CHA\n"
     ]
    }
   ],
   "source": [
    "nba_teams = teams.get_teams()\n",
    "the_abreviations = [nba_teams[i][\"abbreviation\"] for i in range(len(nba_teams))]\n",
    "the_process_2021 = get_games(the_abreviations)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "a5f27e98",
   "metadata": {},
   "outputs": [],
   "source": [
    "home_table2021 = combine_dfs(the_process_2021,True)\n",
    "\n",
    "away_table2021 = combine_dfs(the_process_2021,False)\n",
    "\n",
    "home_table2021[\"ABV\"] = the_abreviations\n",
    "away_table2021[\"ABV\"] = the_abreviations\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "a331bd68",
   "metadata": {},
   "outputs": [],
   "source": [
    "## x is home\n",
    "joined_test_x = home_table2021.merge(away_table2021,left_on=\"ABV\",right_on=\"ABV\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "e5612705",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_TEST = pd.DataFrame()\n",
    "X_TEST[\"PPG_away\"] = joined_test_x[\"PTS_y\"]/joined_test_x[\"Regular_season_y\"]\n",
    "X_TEST[\"PPG_home\"] = joined_test_x[\"PTS_x\"]/joined_test_x[\"Regular_season_x\"]\n",
    "\n",
    "X_TEST[\"RPG_home\"] = joined_test_x[\"REB_x\"]/joined_test_x[\"Regular_season_x\"]\n",
    "X_TEST[\"RPG_away\"] = joined_test_x[\"REB_y\"]/joined_test_x[\"Regular_season_y\"]\n",
    "\n",
    "\n",
    "\n",
    "X_TEST[\"plusminus_home\"] = joined_test_x[\"PLUS_MINUS_x\"]/joined_test_x[\"Regular_season_x\"]\n",
    "X_TEST[\"plusminus_away\"] = joined_test_x[\"PLUS_MINUS_y\"]/joined_test_x[\"Regular_season_y\"]\n",
    "\n",
    "\n",
    "X_TEST[\"BLK_home\"] = joined_test_x[\"BLK_x\"]/joined_test_x[\"Regular_season_x\"]\n",
    "X_TEST[\"BLK_away\"] = joined_test_x[\"BLK_y\"]/joined_test_x[\"Regular_season_y\"]\n",
    "\n",
    "\n",
    "X_TEST[\"test_stat\"]= (joined_test_x[\"win_x\"]/joined_test_x[\"Regular_season_x\"]) - (joined_test_x[\"win_y\"]/joined_test_x[\"Regular_season_y\"])\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "3991b736",
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_TEST = X_TEST[\"test_stat\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "a0c265eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "      <th>test_stat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>110.595238</td>\n",
       "      <td>116.658537</td>\n",
       "      <td>43.609756</td>\n",
       "      <td>44.166667</td>\n",
       "      <td>4.975610</td>\n",
       "      <td>-2.152381</td>\n",
       "      <td>4.609756</td>\n",
       "      <td>3.904762</td>\n",
       "      <td>0.277584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>112.756098</td>\n",
       "      <td>109.714286</td>\n",
       "      <td>45.452381</td>\n",
       "      <td>46.536585</td>\n",
       "      <td>6.190476</td>\n",
       "      <td>7.585366</td>\n",
       "      <td>5.738095</td>\n",
       "      <td>5.975610</td>\n",
       "      <td>0.105691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>107.047619</td>\n",
       "      <td>108.073171</td>\n",
       "      <td>44.780488</td>\n",
       "      <td>43.500000</td>\n",
       "      <td>4.487805</td>\n",
       "      <td>-0.209524</td>\n",
       "      <td>4.243902</td>\n",
       "      <td>4.142857</td>\n",
       "      <td>0.133566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>106.738095</td>\n",
       "      <td>111.365854</td>\n",
       "      <td>45.341463</td>\n",
       "      <td>45.119048</td>\n",
       "      <td>1.048780</td>\n",
       "      <td>-2.547619</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.023810</td>\n",
       "      <td>0.034843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>109.024390</td>\n",
       "      <td>113.833333</td>\n",
       "      <td>43.738095</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>2.904762</td>\n",
       "      <td>-3.195122</td>\n",
       "      <td>4.142857</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>0.203252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>107.095238</td>\n",
       "      <td>108.365854</td>\n",
       "      <td>43.243902</td>\n",
       "      <td>42.428571</td>\n",
       "      <td>6.292683</td>\n",
       "      <td>0.519048</td>\n",
       "      <td>3.829268</td>\n",
       "      <td>4.119048</td>\n",
       "      <td>0.135889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>110.658537</td>\n",
       "      <td>114.285714</td>\n",
       "      <td>43.642857</td>\n",
       "      <td>44.195122</td>\n",
       "      <td>2.528571</td>\n",
       "      <td>2.219512</td>\n",
       "      <td>3.476190</td>\n",
       "      <td>3.951220</td>\n",
       "      <td>-0.038328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>109.000000</td>\n",
       "      <td>112.119048</td>\n",
       "      <td>46.714286</td>\n",
       "      <td>44.195122</td>\n",
       "      <td>9.671429</td>\n",
       "      <td>1.195122</td>\n",
       "      <td>4.928571</td>\n",
       "      <td>4.268293</td>\n",
       "      <td>0.201510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>107.214286</td>\n",
       "      <td>111.926829</td>\n",
       "      <td>41.317073</td>\n",
       "      <td>42.619048</td>\n",
       "      <td>-6.804878</td>\n",
       "      <td>-9.857143</td>\n",
       "      <td>4.829268</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>0.030197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>106.975610</td>\n",
       "      <td>109.500000</td>\n",
       "      <td>44.238095</td>\n",
       "      <td>43.658537</td>\n",
       "      <td>2.119048</td>\n",
       "      <td>-2.292683</td>\n",
       "      <td>4.809524</td>\n",
       "      <td>5.121951</td>\n",
       "      <td>0.180604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>111.166667</td>\n",
       "      <td>112.365854</td>\n",
       "      <td>44.317073</td>\n",
       "      <td>43.714286</td>\n",
       "      <td>-0.536585</td>\n",
       "      <td>-5.390476</td>\n",
       "      <td>5.829268</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>0.202671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>109.292683</td>\n",
       "      <td>110.071429</td>\n",
       "      <td>43.238095</td>\n",
       "      <td>44.073171</td>\n",
       "      <td>5.233333</td>\n",
       "      <td>3.390244</td>\n",
       "      <td>3.166667</td>\n",
       "      <td>3.390244</td>\n",
       "      <td>0.105110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>115.000000</td>\n",
       "      <td>115.292683</td>\n",
       "      <td>47.658537</td>\n",
       "      <td>45.738095</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>2.376190</td>\n",
       "      <td>3.878049</td>\n",
       "      <td>4.166667</td>\n",
       "      <td>0.087108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>118.439024</td>\n",
       "      <td>112.142857</td>\n",
       "      <td>45.666667</td>\n",
       "      <td>42.414634</td>\n",
       "      <td>4.261905</td>\n",
       "      <td>0.219512</td>\n",
       "      <td>5.785714</td>\n",
       "      <td>5.341463</td>\n",
       "      <td>0.131243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>114.333333</td>\n",
       "      <td>110.439024</td>\n",
       "      <td>45.512195</td>\n",
       "      <td>43.095238</td>\n",
       "      <td>-1.975610</td>\n",
       "      <td>3.309524</td>\n",
       "      <td>5.707317</td>\n",
       "      <td>5.285714</td>\n",
       "      <td>-0.083624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>106.951220</td>\n",
       "      <td>105.952381</td>\n",
       "      <td>45.571429</td>\n",
       "      <td>46.634146</td>\n",
       "      <td>-1.095238</td>\n",
       "      <td>1.292683</td>\n",
       "      <td>5.238095</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>-0.059233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>104.243902</td>\n",
       "      <td>103.595238</td>\n",
       "      <td>43.595238</td>\n",
       "      <td>44.878049</td>\n",
       "      <td>-7.952381</td>\n",
       "      <td>-7.829268</td>\n",
       "      <td>4.476190</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>0.041812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>107.880952</td>\n",
       "      <td>114.219512</td>\n",
       "      <td>43.780488</td>\n",
       "      <td>43.857143</td>\n",
       "      <td>-0.609756</td>\n",
       "      <td>-6.023810</td>\n",
       "      <td>5.536585</td>\n",
       "      <td>5.738095</td>\n",
       "      <td>0.152149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>109.682927</td>\n",
       "      <td>110.023810</td>\n",
       "      <td>41.833333</td>\n",
       "      <td>42.536585</td>\n",
       "      <td>3.171429</td>\n",
       "      <td>2.097561</td>\n",
       "      <td>5.428571</td>\n",
       "      <td>5.097561</td>\n",
       "      <td>-0.063298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>114.195122</td>\n",
       "      <td>114.738095</td>\n",
       "      <td>46.333333</td>\n",
       "      <td>44.341463</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>6.121951</td>\n",
       "      <td>4.952381</td>\n",
       "      <td>3.853659</td>\n",
       "      <td>-0.018583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>103.658537</td>\n",
       "      <td>108.404762</td>\n",
       "      <td>43.690476</td>\n",
       "      <td>42.097561</td>\n",
       "      <td>-4.766667</td>\n",
       "      <td>-12.512195</td>\n",
       "      <td>4.785714</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>0.160859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>110.047619</td>\n",
       "      <td>110.317073</td>\n",
       "      <td>42.170732</td>\n",
       "      <td>43.690476</td>\n",
       "      <td>-4.048780</td>\n",
       "      <td>-6.095238</td>\n",
       "      <td>4.658537</td>\n",
       "      <td>4.261905</td>\n",
       "      <td>0.033101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>112.190476</td>\n",
       "      <td>113.609756</td>\n",
       "      <td>45.121951</td>\n",
       "      <td>45.357143</td>\n",
       "      <td>-0.146341</td>\n",
       "      <td>-0.214286</td>\n",
       "      <td>4.878049</td>\n",
       "      <td>4.880952</td>\n",
       "      <td>-0.038328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>102.804878</td>\n",
       "      <td>104.928571</td>\n",
       "      <td>45.642857</td>\n",
       "      <td>45.463415</td>\n",
       "      <td>-5.690476</td>\n",
       "      <td>-9.804878</td>\n",
       "      <td>4.904762</td>\n",
       "      <td>4.268293</td>\n",
       "      <td>0.016841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>107.780488</td>\n",
       "      <td>110.404762</td>\n",
       "      <td>45.642857</td>\n",
       "      <td>45.219512</td>\n",
       "      <td>4.095238</td>\n",
       "      <td>0.341463</td>\n",
       "      <td>4.857143</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>0.009872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>110.142857</td>\n",
       "      <td>116.780488</td>\n",
       "      <td>47.121951</td>\n",
       "      <td>45.285714</td>\n",
       "      <td>9.878049</td>\n",
       "      <td>2.395238</td>\n",
       "      <td>5.292683</td>\n",
       "      <td>4.452381</td>\n",
       "      <td>0.231127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>113.642857</td>\n",
       "      <td>117.341463</td>\n",
       "      <td>49.048780</td>\n",
       "      <td>49.285714</td>\n",
       "      <td>9.195122</td>\n",
       "      <td>2.366667</td>\n",
       "      <td>6.756098</td>\n",
       "      <td>6.190476</td>\n",
       "      <td>0.088850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>105.341463</td>\n",
       "      <td>110.785714</td>\n",
       "      <td>43.476190</td>\n",
       "      <td>42.682927</td>\n",
       "      <td>-0.833333</td>\n",
       "      <td>-6.121951</td>\n",
       "      <td>5.190476</td>\n",
       "      <td>4.780488</td>\n",
       "      <td>0.158537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>103.976190</td>\n",
       "      <td>105.073171</td>\n",
       "      <td>43.609756</td>\n",
       "      <td>42.333333</td>\n",
       "      <td>-5.146341</td>\n",
       "      <td>-10.023810</td>\n",
       "      <td>4.926829</td>\n",
       "      <td>4.666667</td>\n",
       "      <td>0.055168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>116.166667</td>\n",
       "      <td>113.463415</td>\n",
       "      <td>46.341463</td>\n",
       "      <td>42.666667</td>\n",
       "      <td>1.414634</td>\n",
       "      <td>-1.071429</td>\n",
       "      <td>5.560976</td>\n",
       "      <td>4.357143</td>\n",
       "      <td>0.036585</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "0   110.595238  116.658537  43.609756  44.166667        4.975610   \n",
       "1   112.756098  109.714286  45.452381  46.536585        6.190476   \n",
       "2   107.047619  108.073171  44.780488  43.500000        4.487805   \n",
       "3   106.738095  111.365854  45.341463  45.119048        1.048780   \n",
       "4   109.024390  113.833333  43.738095  41.000000        2.904762   \n",
       "5   107.095238  108.365854  43.243902  42.428571        6.292683   \n",
       "6   110.658537  114.285714  43.642857  44.195122        2.528571   \n",
       "7   109.000000  112.119048  46.714286  44.195122        9.671429   \n",
       "8   107.214286  111.926829  41.317073  42.619048       -6.804878   \n",
       "9   106.975610  109.500000  44.238095  43.658537        2.119048   \n",
       "10  111.166667  112.365854  44.317073  43.714286       -0.536585   \n",
       "11  109.292683  110.071429  43.238095  44.073171        5.233333   \n",
       "12  115.000000  115.292683  47.658537  45.738095        4.121951   \n",
       "13  118.439024  112.142857  45.666667  42.414634        4.261905   \n",
       "14  114.333333  110.439024  45.512195  43.095238       -1.975610   \n",
       "15  106.951220  105.952381  45.571429  46.634146       -1.095238   \n",
       "16  104.243902  103.595238  43.595238  44.878049       -7.952381   \n",
       "17  107.880952  114.219512  43.780488  43.857143       -0.609756   \n",
       "18  109.682927  110.023810  41.833333  42.536585        3.171429   \n",
       "19  114.195122  114.738095  46.333333  44.341463        8.666667   \n",
       "20  103.658537  108.404762  43.690476  42.097561       -4.766667   \n",
       "21  110.047619  110.317073  42.170732  43.690476       -4.048780   \n",
       "22  112.190476  113.609756  45.121951  45.357143       -0.146341   \n",
       "23  102.804878  104.928571  45.642857  45.463415       -5.690476   \n",
       "24  107.780488  110.404762  45.642857  45.219512        4.095238   \n",
       "25  110.142857  116.780488  47.121951  45.285714        9.878049   \n",
       "26  113.642857  117.341463  49.048780  49.285714        9.195122   \n",
       "27  105.341463  110.785714  43.476190  42.682927       -0.833333   \n",
       "28  103.976190  105.073171  43.609756  42.333333       -5.146341   \n",
       "29  116.166667  113.463415  46.341463  42.666667        1.414634   \n",
       "\n",
       "    plusminus_away  BLK_home  BLK_away  test_stat  \n",
       "0        -2.152381  4.609756  3.904762   0.277584  \n",
       "1         7.585366  5.738095  5.975610   0.105691  \n",
       "2        -0.209524  4.243902  4.142857   0.133566  \n",
       "3        -2.547619  4.000000  4.023810   0.034843  \n",
       "4        -3.195122  4.142857  4.121951   0.203252  \n",
       "5         0.519048  3.829268  4.119048   0.135889  \n",
       "6         2.219512  3.476190  3.951220  -0.038328  \n",
       "7         1.195122  4.928571  4.268293   0.201510  \n",
       "8        -9.857143  4.829268  4.500000   0.030197  \n",
       "9        -2.292683  4.809524  5.121951   0.180604  \n",
       "10       -5.390476  5.829268  4.500000   0.202671  \n",
       "11        3.390244  3.166667  3.390244   0.105110  \n",
       "12        2.376190  3.878049  4.166667   0.087108  \n",
       "13        0.219512  5.785714  5.341463   0.131243  \n",
       "14        3.309524  5.707317  5.285714  -0.083624  \n",
       "15        1.292683  5.238095  4.414634  -0.059233  \n",
       "16       -7.829268  4.476190  4.414634   0.041812  \n",
       "17       -6.023810  5.536585  5.738095   0.152149  \n",
       "18        2.097561  5.428571  5.097561  -0.063298  \n",
       "19        6.121951  4.952381  3.853659  -0.018583  \n",
       "20      -12.512195  4.785714  4.121951   0.160859  \n",
       "21       -6.095238  4.658537  4.261905   0.033101  \n",
       "22       -0.214286  4.878049  4.880952  -0.038328  \n",
       "23       -9.804878  4.904762  4.268293   0.016841  \n",
       "24        0.341463  4.857143  4.414634   0.009872  \n",
       "25        2.395238  5.292683  4.452381   0.231127  \n",
       "26        2.366667  6.756098  6.190476   0.088850  \n",
       "27       -6.121951  5.190476  4.780488   0.158537  \n",
       "28      -10.023810  4.926829  4.666667   0.055168  \n",
       "29       -1.071429  5.560976  4.357143   0.036585  "
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_TEST"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "ff52b8d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_tester = X_TEST.drop([\"test_stat\"],axis=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "cc8887b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.15371278414962739"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = regr.predict(final_tester)\n",
    "mean_squared_error(Y_TEST, predictions, squared=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "eb7ba5b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08375919473480449"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.mean(Y_TEST)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63b4aabb",
   "metadata": {},
   "source": [
    "### Using only the 4 most important features, we achieve an average error of .15. Meaning for an average proportion difference prediction we're normally off by about .15."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10f89709",
   "metadata": {},
   "source": [
    "## Below I include assists to see if the prediction improves"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "c82bab2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "      <th>test_stat</th>\n",
       "      <th>TEAM</th>\n",
       "      <th>AST_home</th>\n",
       "      <th>AST_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>94.090909</td>\n",
       "      <td>99.090909</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>42.363636</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.878788</td>\n",
       "      <td>4.393939</td>\n",
       "      <td>4.787879</td>\n",
       "      <td>0.181818</td>\n",
       "      <td>53150220321</td>\n",
       "      <td>21.575758</td>\n",
       "      <td>23.303030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>91.545455</td>\n",
       "      <td>92.151515</td>\n",
       "      <td>37.121212</td>\n",
       "      <td>40.454545</td>\n",
       "      <td>-2.727273</td>\n",
       "      <td>7.727273</td>\n",
       "      <td>5.818182</td>\n",
       "      <td>5.151515</td>\n",
       "      <td>0.272727</td>\n",
       "      <td>53150220354</td>\n",
       "      <td>23.424242</td>\n",
       "      <td>23.757576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>93.363636</td>\n",
       "      <td>92.696970</td>\n",
       "      <td>42.484848</td>\n",
       "      <td>42.060606</td>\n",
       "      <td>-7.484848</td>\n",
       "      <td>-6.909091</td>\n",
       "      <td>3.545455</td>\n",
       "      <td>4.393939</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>53150220387</td>\n",
       "      <td>18.424242</td>\n",
       "      <td>21.212121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>90.000000</td>\n",
       "      <td>89.272727</td>\n",
       "      <td>40.575758</td>\n",
       "      <td>41.696970</td>\n",
       "      <td>-4.757576</td>\n",
       "      <td>-2.757576</td>\n",
       "      <td>4.242424</td>\n",
       "      <td>5.333333</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>53150220420</td>\n",
       "      <td>19.909091</td>\n",
       "      <td>21.545455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>96.757576</td>\n",
       "      <td>95.939394</td>\n",
       "      <td>45.484848</td>\n",
       "      <td>47.848485</td>\n",
       "      <td>8.242424</td>\n",
       "      <td>8.121212</td>\n",
       "      <td>4.939394</td>\n",
       "      <td>6.818182</td>\n",
       "      <td>0.060606</td>\n",
       "      <td>53150220453</td>\n",
       "      <td>22.636364</td>\n",
       "      <td>23.636364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>109.956522</td>\n",
       "      <td>102.239130</td>\n",
       "      <td>44.163043</td>\n",
       "      <td>45.434783</td>\n",
       "      <td>4.943478</td>\n",
       "      <td>7.630435</td>\n",
       "      <td>6.478261</td>\n",
       "      <td>4.586957</td>\n",
       "      <td>-0.032609</td>\n",
       "      <td>74088186224</td>\n",
       "      <td>26.619565</td>\n",
       "      <td>22.847826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158</th>\n",
       "      <td>96.391304</td>\n",
       "      <td>101.043478</td>\n",
       "      <td>42.804348</td>\n",
       "      <td>42.891304</td>\n",
       "      <td>-1.352174</td>\n",
       "      <td>3.136957</td>\n",
       "      <td>5.869565</td>\n",
       "      <td>5.728261</td>\n",
       "      <td>0.163043</td>\n",
       "      <td>74088186408</td>\n",
       "      <td>20.489130</td>\n",
       "      <td>20.586957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>94.782609</td>\n",
       "      <td>93.695652</td>\n",
       "      <td>41.391304</td>\n",
       "      <td>42.760870</td>\n",
       "      <td>-10.100000</td>\n",
       "      <td>-3.804348</td>\n",
       "      <td>6.282609</td>\n",
       "      <td>6.130435</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>74088186730</td>\n",
       "      <td>19.652174</td>\n",
       "      <td>21.717391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>101.234043</td>\n",
       "      <td>101.914894</td>\n",
       "      <td>43.925532</td>\n",
       "      <td>42.170213</td>\n",
       "      <td>-0.825532</td>\n",
       "      <td>2.723404</td>\n",
       "      <td>5.191489</td>\n",
       "      <td>5.510638</td>\n",
       "      <td>0.063830</td>\n",
       "      <td>75698799156</td>\n",
       "      <td>22.914894</td>\n",
       "      <td>20.063830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>106.489362</td>\n",
       "      <td>102.978723</td>\n",
       "      <td>43.510638</td>\n",
       "      <td>43.191489</td>\n",
       "      <td>-4.097872</td>\n",
       "      <td>6.565957</td>\n",
       "      <td>4.936170</td>\n",
       "      <td>5.744681</td>\n",
       "      <td>0.404255</td>\n",
       "      <td>75698799673</td>\n",
       "      <td>23.042553</td>\n",
       "      <td>22.340426</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>162 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "0     94.090909   99.090909  40.000000  42.363636        2.000000   \n",
       "1     91.545455   92.151515  37.121212  40.454545       -2.727273   \n",
       "2     93.363636   92.696970  42.484848  42.060606       -7.484848   \n",
       "3     90.000000   89.272727  40.575758  41.696970       -4.757576   \n",
       "4     96.757576   95.939394  45.484848  47.848485        8.242424   \n",
       "..          ...         ...        ...        ...             ...   \n",
       "157  109.956522  102.239130  44.163043  45.434783        4.943478   \n",
       "158   96.391304  101.043478  42.804348  42.891304       -1.352174   \n",
       "159   94.782609   93.695652  41.391304  42.760870      -10.100000   \n",
       "160  101.234043  101.914894  43.925532  42.170213       -0.825532   \n",
       "161  106.489362  102.978723  43.510638  43.191489       -4.097872   \n",
       "\n",
       "     plusminus_away  BLK_home  BLK_away  test_stat         TEAM   AST_home  \\\n",
       "0          4.878788  4.393939  4.787879   0.181818  53150220321  21.575758   \n",
       "1          7.727273  5.818182  5.151515   0.272727  53150220354  23.424242   \n",
       "2         -6.909091  3.545455  4.393939   0.030303  53150220387  18.424242   \n",
       "3         -2.757576  4.242424  5.333333   0.030303  53150220420  19.909091   \n",
       "4          8.121212  4.939394  6.818182   0.060606  53150220453  22.636364   \n",
       "..              ...       ...       ...        ...          ...        ...   \n",
       "157        7.630435  6.478261  4.586957  -0.032609  74088186224  26.619565   \n",
       "158        3.136957  5.869565  5.728261   0.163043  74088186408  20.489130   \n",
       "159       -3.804348  6.282609  6.130435   0.239130  74088186730  19.652174   \n",
       "160        2.723404  5.191489  5.510638   0.063830  75698799156  22.914894   \n",
       "161        6.565957  4.936170  5.744681   0.404255  75698799673  23.042553   \n",
       "\n",
       "      AST_away  \n",
       "0    23.303030  \n",
       "1    23.757576  \n",
       "2    21.212121  \n",
       "3    21.545455  \n",
       "4    23.636364  \n",
       "..         ...  \n",
       "157  22.847826  \n",
       "158  20.586957  \n",
       "159  21.717391  \n",
       "160  20.063830  \n",
       "161  22.340426  \n",
       "\n",
       "[162 rows x 12 columns]"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "the_table_created_two= the_table_created.copy()\n",
    "the_table_created_two[\"AST_home\"] = merged_table[\"away_AST\"]/merged_table[\"away_Regular_season\"]\n",
    "the_table_created_two[\"AST_away\"] = merged_table[\"AST\"]/merged_table[\"Regular_season\"]\n",
    "the_table_created_two\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "7ed6c989",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.07734401854878699"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_ass = the_table_created_two.drop([\"TEAM\",\"test_stat\"],axis=1)\n",
    "\n",
    "Y = the_table_created_two[\"test_stat\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_ass, Y, test_size=0.30)\n",
    "\n",
    "regr = RandomForestRegressor(max_depth=6, n_estimators=100)\n",
    "\n",
    "\n",
    "regr.fit(X_train, y_train)\n",
    "\n",
    "mean_squared_error(y_test, regr.predict(X_test), squared=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "3c9d0818",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.0062987817455939605"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "cross_val_score(regr, X_ass, Y, cv=5,scoring=\"neg_mean_squared_error\")\n",
    "np.mean(cross_val_score(regr, X_ass, Y, cv=5,scoring=\"neg_mean_squared_error\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "7a0489b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "      <th>test_stat</th>\n",
       "      <th>AST_home</th>\n",
       "      <th>AST_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>110.595238</td>\n",
       "      <td>116.658537</td>\n",
       "      <td>43.609756</td>\n",
       "      <td>44.166667</td>\n",
       "      <td>4.975610</td>\n",
       "      <td>-2.152381</td>\n",
       "      <td>4.609756</td>\n",
       "      <td>3.904762</td>\n",
       "      <td>0.277584</td>\n",
       "      <td>25.195122</td>\n",
       "      <td>23.976190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>112.756098</td>\n",
       "      <td>109.714286</td>\n",
       "      <td>45.452381</td>\n",
       "      <td>46.536585</td>\n",
       "      <td>6.190476</td>\n",
       "      <td>7.585366</td>\n",
       "      <td>5.738095</td>\n",
       "      <td>5.975610</td>\n",
       "      <td>0.105691</td>\n",
       "      <td>24.380952</td>\n",
       "      <td>25.146341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>107.047619</td>\n",
       "      <td>108.073171</td>\n",
       "      <td>44.780488</td>\n",
       "      <td>43.500000</td>\n",
       "      <td>4.487805</td>\n",
       "      <td>-0.209524</td>\n",
       "      <td>4.243902</td>\n",
       "      <td>4.142857</td>\n",
       "      <td>0.133566</td>\n",
       "      <td>25.414634</td>\n",
       "      <td>24.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>106.738095</td>\n",
       "      <td>111.365854</td>\n",
       "      <td>45.341463</td>\n",
       "      <td>45.119048</td>\n",
       "      <td>1.048780</td>\n",
       "      <td>-2.547619</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.023810</td>\n",
       "      <td>0.034843</td>\n",
       "      <td>25.853659</td>\n",
       "      <td>24.142857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>109.024390</td>\n",
       "      <td>113.833333</td>\n",
       "      <td>43.738095</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>2.904762</td>\n",
       "      <td>-3.195122</td>\n",
       "      <td>4.142857</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>0.203252</td>\n",
       "      <td>24.238095</td>\n",
       "      <td>23.463415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>107.095238</td>\n",
       "      <td>108.365854</td>\n",
       "      <td>43.243902</td>\n",
       "      <td>42.428571</td>\n",
       "      <td>6.292683</td>\n",
       "      <td>0.519048</td>\n",
       "      <td>3.829268</td>\n",
       "      <td>4.119048</td>\n",
       "      <td>0.135889</td>\n",
       "      <td>23.170732</td>\n",
       "      <td>23.404762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>110.658537</td>\n",
       "      <td>114.285714</td>\n",
       "      <td>43.642857</td>\n",
       "      <td>44.195122</td>\n",
       "      <td>2.528571</td>\n",
       "      <td>2.219512</td>\n",
       "      <td>3.476190</td>\n",
       "      <td>3.951220</td>\n",
       "      <td>-0.038328</td>\n",
       "      <td>27.976190</td>\n",
       "      <td>27.463415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>109.000000</td>\n",
       "      <td>112.119048</td>\n",
       "      <td>46.714286</td>\n",
       "      <td>44.195122</td>\n",
       "      <td>9.671429</td>\n",
       "      <td>1.195122</td>\n",
       "      <td>4.928571</td>\n",
       "      <td>4.268293</td>\n",
       "      <td>0.201510</td>\n",
       "      <td>27.952381</td>\n",
       "      <td>26.048780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>107.214286</td>\n",
       "      <td>111.926829</td>\n",
       "      <td>41.317073</td>\n",
       "      <td>42.619048</td>\n",
       "      <td>-6.804878</td>\n",
       "      <td>-9.857143</td>\n",
       "      <td>4.829268</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>0.030197</td>\n",
       "      <td>24.634146</td>\n",
       "      <td>22.571429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>106.975610</td>\n",
       "      <td>109.500000</td>\n",
       "      <td>44.238095</td>\n",
       "      <td>43.658537</td>\n",
       "      <td>2.119048</td>\n",
       "      <td>-2.292683</td>\n",
       "      <td>4.809524</td>\n",
       "      <td>5.121951</td>\n",
       "      <td>0.180604</td>\n",
       "      <td>24.095238</td>\n",
       "      <td>23.926829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>111.166667</td>\n",
       "      <td>112.365854</td>\n",
       "      <td>44.317073</td>\n",
       "      <td>43.714286</td>\n",
       "      <td>-0.536585</td>\n",
       "      <td>-5.390476</td>\n",
       "      <td>5.829268</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>0.202671</td>\n",
       "      <td>24.390244</td>\n",
       "      <td>23.619048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>109.292683</td>\n",
       "      <td>110.071429</td>\n",
       "      <td>43.238095</td>\n",
       "      <td>44.073171</td>\n",
       "      <td>5.233333</td>\n",
       "      <td>3.390244</td>\n",
       "      <td>3.166667</td>\n",
       "      <td>3.390244</td>\n",
       "      <td>0.105110</td>\n",
       "      <td>25.595238</td>\n",
       "      <td>25.243902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>115.000000</td>\n",
       "      <td>115.292683</td>\n",
       "      <td>47.658537</td>\n",
       "      <td>45.738095</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>2.376190</td>\n",
       "      <td>3.878049</td>\n",
       "      <td>4.166667</td>\n",
       "      <td>0.087108</td>\n",
       "      <td>23.902439</td>\n",
       "      <td>23.738095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>118.439024</td>\n",
       "      <td>112.142857</td>\n",
       "      <td>45.666667</td>\n",
       "      <td>42.414634</td>\n",
       "      <td>4.261905</td>\n",
       "      <td>0.219512</td>\n",
       "      <td>5.785714</td>\n",
       "      <td>5.341463</td>\n",
       "      <td>0.131243</td>\n",
       "      <td>25.166667</td>\n",
       "      <td>25.878049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>114.333333</td>\n",
       "      <td>110.439024</td>\n",
       "      <td>45.512195</td>\n",
       "      <td>43.095238</td>\n",
       "      <td>-1.975610</td>\n",
       "      <td>3.309524</td>\n",
       "      <td>5.707317</td>\n",
       "      <td>5.285714</td>\n",
       "      <td>-0.083624</td>\n",
       "      <td>25.073171</td>\n",
       "      <td>25.238095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>106.951220</td>\n",
       "      <td>105.952381</td>\n",
       "      <td>45.571429</td>\n",
       "      <td>46.634146</td>\n",
       "      <td>-1.095238</td>\n",
       "      <td>1.292683</td>\n",
       "      <td>5.238095</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>-0.059233</td>\n",
       "      <td>22.261905</td>\n",
       "      <td>21.487805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>104.243902</td>\n",
       "      <td>103.595238</td>\n",
       "      <td>43.595238</td>\n",
       "      <td>44.878049</td>\n",
       "      <td>-7.952381</td>\n",
       "      <td>-7.829268</td>\n",
       "      <td>4.476190</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>0.041812</td>\n",
       "      <td>23.595238</td>\n",
       "      <td>23.756098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>107.880952</td>\n",
       "      <td>114.219512</td>\n",
       "      <td>43.780488</td>\n",
       "      <td>43.857143</td>\n",
       "      <td>-0.609756</td>\n",
       "      <td>-6.023810</td>\n",
       "      <td>5.536585</td>\n",
       "      <td>5.738095</td>\n",
       "      <td>0.152149</td>\n",
       "      <td>27.219512</td>\n",
       "      <td>23.309524</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>109.682927</td>\n",
       "      <td>110.023810</td>\n",
       "      <td>41.833333</td>\n",
       "      <td>42.536585</td>\n",
       "      <td>3.171429</td>\n",
       "      <td>2.097561</td>\n",
       "      <td>5.428571</td>\n",
       "      <td>5.097561</td>\n",
       "      <td>-0.063298</td>\n",
       "      <td>24.428571</td>\n",
       "      <td>22.853659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>114.195122</td>\n",
       "      <td>114.738095</td>\n",
       "      <td>46.333333</td>\n",
       "      <td>44.341463</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>6.121951</td>\n",
       "      <td>4.952381</td>\n",
       "      <td>3.853659</td>\n",
       "      <td>-0.018583</td>\n",
       "      <td>27.738095</td>\n",
       "      <td>26.756098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>103.658537</td>\n",
       "      <td>108.404762</td>\n",
       "      <td>43.690476</td>\n",
       "      <td>42.097561</td>\n",
       "      <td>-4.766667</td>\n",
       "      <td>-12.512195</td>\n",
       "      <td>4.785714</td>\n",
       "      <td>4.121951</td>\n",
       "      <td>0.160859</td>\n",
       "      <td>23.071429</td>\n",
       "      <td>22.658537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>110.047619</td>\n",
       "      <td>110.317073</td>\n",
       "      <td>42.170732</td>\n",
       "      <td>43.690476</td>\n",
       "      <td>-4.048780</td>\n",
       "      <td>-6.095238</td>\n",
       "      <td>4.658537</td>\n",
       "      <td>4.261905</td>\n",
       "      <td>0.033101</td>\n",
       "      <td>23.756098</td>\n",
       "      <td>23.476190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>112.190476</td>\n",
       "      <td>113.609756</td>\n",
       "      <td>45.121951</td>\n",
       "      <td>45.357143</td>\n",
       "      <td>-0.146341</td>\n",
       "      <td>-0.214286</td>\n",
       "      <td>4.878049</td>\n",
       "      <td>4.880952</td>\n",
       "      <td>-0.038328</td>\n",
       "      <td>27.682927</td>\n",
       "      <td>27.952381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>102.804878</td>\n",
       "      <td>104.928571</td>\n",
       "      <td>45.642857</td>\n",
       "      <td>45.463415</td>\n",
       "      <td>-5.690476</td>\n",
       "      <td>-9.804878</td>\n",
       "      <td>4.904762</td>\n",
       "      <td>4.268293</td>\n",
       "      <td>0.016841</td>\n",
       "      <td>22.690476</td>\n",
       "      <td>21.804878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>107.780488</td>\n",
       "      <td>110.404762</td>\n",
       "      <td>45.642857</td>\n",
       "      <td>45.219512</td>\n",
       "      <td>4.095238</td>\n",
       "      <td>0.341463</td>\n",
       "      <td>4.857143</td>\n",
       "      <td>4.414634</td>\n",
       "      <td>0.009872</td>\n",
       "      <td>22.404762</td>\n",
       "      <td>21.536585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>110.142857</td>\n",
       "      <td>116.780488</td>\n",
       "      <td>47.121951</td>\n",
       "      <td>45.285714</td>\n",
       "      <td>9.878049</td>\n",
       "      <td>2.395238</td>\n",
       "      <td>5.292683</td>\n",
       "      <td>4.452381</td>\n",
       "      <td>0.231127</td>\n",
       "      <td>23.463415</td>\n",
       "      <td>21.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>113.642857</td>\n",
       "      <td>117.341463</td>\n",
       "      <td>49.048780</td>\n",
       "      <td>49.285714</td>\n",
       "      <td>9.195122</td>\n",
       "      <td>2.366667</td>\n",
       "      <td>6.756098</td>\n",
       "      <td>6.190476</td>\n",
       "      <td>0.088850</td>\n",
       "      <td>26.829268</td>\n",
       "      <td>25.095238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>105.341463</td>\n",
       "      <td>110.785714</td>\n",
       "      <td>43.476190</td>\n",
       "      <td>42.682927</td>\n",
       "      <td>-0.833333</td>\n",
       "      <td>-6.121951</td>\n",
       "      <td>5.190476</td>\n",
       "      <td>4.780488</td>\n",
       "      <td>0.158537</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>24.317073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>103.976190</td>\n",
       "      <td>105.073171</td>\n",
       "      <td>43.609756</td>\n",
       "      <td>42.333333</td>\n",
       "      <td>-5.146341</td>\n",
       "      <td>-10.023810</td>\n",
       "      <td>4.926829</td>\n",
       "      <td>4.666667</td>\n",
       "      <td>0.055168</td>\n",
       "      <td>23.439024</td>\n",
       "      <td>23.238095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>116.166667</td>\n",
       "      <td>113.463415</td>\n",
       "      <td>46.341463</td>\n",
       "      <td>42.666667</td>\n",
       "      <td>1.414634</td>\n",
       "      <td>-1.071429</td>\n",
       "      <td>5.560976</td>\n",
       "      <td>4.357143</td>\n",
       "      <td>0.036585</td>\n",
       "      <td>28.268293</td>\n",
       "      <td>27.547619</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "0   110.595238  116.658537  43.609756  44.166667        4.975610   \n",
       "1   112.756098  109.714286  45.452381  46.536585        6.190476   \n",
       "2   107.047619  108.073171  44.780488  43.500000        4.487805   \n",
       "3   106.738095  111.365854  45.341463  45.119048        1.048780   \n",
       "4   109.024390  113.833333  43.738095  41.000000        2.904762   \n",
       "5   107.095238  108.365854  43.243902  42.428571        6.292683   \n",
       "6   110.658537  114.285714  43.642857  44.195122        2.528571   \n",
       "7   109.000000  112.119048  46.714286  44.195122        9.671429   \n",
       "8   107.214286  111.926829  41.317073  42.619048       -6.804878   \n",
       "9   106.975610  109.500000  44.238095  43.658537        2.119048   \n",
       "10  111.166667  112.365854  44.317073  43.714286       -0.536585   \n",
       "11  109.292683  110.071429  43.238095  44.073171        5.233333   \n",
       "12  115.000000  115.292683  47.658537  45.738095        4.121951   \n",
       "13  118.439024  112.142857  45.666667  42.414634        4.261905   \n",
       "14  114.333333  110.439024  45.512195  43.095238       -1.975610   \n",
       "15  106.951220  105.952381  45.571429  46.634146       -1.095238   \n",
       "16  104.243902  103.595238  43.595238  44.878049       -7.952381   \n",
       "17  107.880952  114.219512  43.780488  43.857143       -0.609756   \n",
       "18  109.682927  110.023810  41.833333  42.536585        3.171429   \n",
       "19  114.195122  114.738095  46.333333  44.341463        8.666667   \n",
       "20  103.658537  108.404762  43.690476  42.097561       -4.766667   \n",
       "21  110.047619  110.317073  42.170732  43.690476       -4.048780   \n",
       "22  112.190476  113.609756  45.121951  45.357143       -0.146341   \n",
       "23  102.804878  104.928571  45.642857  45.463415       -5.690476   \n",
       "24  107.780488  110.404762  45.642857  45.219512        4.095238   \n",
       "25  110.142857  116.780488  47.121951  45.285714        9.878049   \n",
       "26  113.642857  117.341463  49.048780  49.285714        9.195122   \n",
       "27  105.341463  110.785714  43.476190  42.682927       -0.833333   \n",
       "28  103.976190  105.073171  43.609756  42.333333       -5.146341   \n",
       "29  116.166667  113.463415  46.341463  42.666667        1.414634   \n",
       "\n",
       "    plusminus_away  BLK_home  BLK_away  test_stat   AST_home   AST_away  \n",
       "0        -2.152381  4.609756  3.904762   0.277584  25.195122  23.976190  \n",
       "1         7.585366  5.738095  5.975610   0.105691  24.380952  25.146341  \n",
       "2        -0.209524  4.243902  4.142857   0.133566  25.414634  24.666667  \n",
       "3        -2.547619  4.000000  4.023810   0.034843  25.853659  24.142857  \n",
       "4        -3.195122  4.142857  4.121951   0.203252  24.238095  23.463415  \n",
       "5         0.519048  3.829268  4.119048   0.135889  23.170732  23.404762  \n",
       "6         2.219512  3.476190  3.951220  -0.038328  27.976190  27.463415  \n",
       "7         1.195122  4.928571  4.268293   0.201510  27.952381  26.048780  \n",
       "8        -9.857143  4.829268  4.500000   0.030197  24.634146  22.571429  \n",
       "9        -2.292683  4.809524  5.121951   0.180604  24.095238  23.926829  \n",
       "10       -5.390476  5.829268  4.500000   0.202671  24.390244  23.619048  \n",
       "11        3.390244  3.166667  3.390244   0.105110  25.595238  25.243902  \n",
       "12        2.376190  3.878049  4.166667   0.087108  23.902439  23.738095  \n",
       "13        0.219512  5.785714  5.341463   0.131243  25.166667  25.878049  \n",
       "14        3.309524  5.707317  5.285714  -0.083624  25.073171  25.238095  \n",
       "15        1.292683  5.238095  4.414634  -0.059233  22.261905  21.487805  \n",
       "16       -7.829268  4.476190  4.414634   0.041812  23.595238  23.756098  \n",
       "17       -6.023810  5.536585  5.738095   0.152149  27.219512  23.309524  \n",
       "18        2.097561  5.428571  5.097561  -0.063298  24.428571  22.853659  \n",
       "19        6.121951  4.952381  3.853659  -0.018583  27.738095  26.756098  \n",
       "20      -12.512195  4.785714  4.121951   0.160859  23.071429  22.658537  \n",
       "21       -6.095238  4.658537  4.261905   0.033101  23.756098  23.476190  \n",
       "22       -0.214286  4.878049  4.880952  -0.038328  27.682927  27.952381  \n",
       "23       -9.804878  4.904762  4.268293   0.016841  22.690476  21.804878  \n",
       "24        0.341463  4.857143  4.414634   0.009872  22.404762  21.536585  \n",
       "25        2.395238  5.292683  4.452381   0.231127  23.463415  21.333333  \n",
       "26        2.366667  6.756098  6.190476   0.088850  26.829268  25.095238  \n",
       "27       -6.121951  5.190476  4.780488   0.158537  25.500000  24.317073  \n",
       "28      -10.023810  4.926829  4.666667   0.055168  23.439024  23.238095  \n",
       "29       -1.071429  5.560976  4.357143   0.036585  28.268293  27.547619  "
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_TEST[\"AST_home\"] = joined_test_x[\"AST_x\"]/joined_test_x[\"Regular_season_x\"]\n",
    "X_TEST[\"AST_away\"] = joined_test_x[\"AST_y\"]/joined_test_x[\"Regular_season_y\"]\n",
    "X_TEST\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "0e68d7af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.19135680401529337"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_tester = X_TEST.drop([\"test_stat\"],axis=1)\n",
    "predictions = regr.predict(final_tester)\n",
    "mean_squared_error(Y_TEST, predictions, squared=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb03c0ad",
   "metadata": {},
   "source": [
    "### It does not improve the model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6abaebc",
   "metadata": {},
   "source": [
    "### Next we see which max depth to use to improve the performance of the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "b680f8c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "max_depths = range(1,50,1)\n",
    "mse_keep = []\n",
    "for i in max_depths:\n",
    "    regr = RandomForestRegressor(max_depth=i, n_estimators=100).fit(X_train,y_train)\n",
    "    mse = mean_squared_error(y_test, regr.predict(X_test), squared=False)\n",
    "    mse_keep.append(mse)\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "bdbe621e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'MSE vs Max depth')"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(max_depths,mse_keep)\n",
    "plt.ylabel(\"MSE\")\n",
    "plt.xlabel(\"max_depth\")\n",
    "plt.title(\"MSE vs Max depth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "f139493e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.14514401536015928,\n",
       " 0.1129399115089932,\n",
       " 0.09540293891783029,\n",
       " 0.08678217371492288,\n",
       " 0.08348266651800433,\n",
       " 0.08271946775358709,\n",
       " 0.0778400078272103,\n",
       " 0.0812156037828413,\n",
       " 0.0796567920050588,\n",
       " 0.08236843269423057,\n",
       " 0.0781320670091148,\n",
       " 0.08277594836130517,\n",
       " 0.08176415859840265,\n",
       " 0.0807779130471144,\n",
       " 0.08181034506308817,\n",
       " 0.08138101442631178,\n",
       " 0.0805028200448012,\n",
       " 0.08003311485745516,\n",
       " 0.0801654466115309,\n",
       " 0.08232994552513591,\n",
       " 0.07907867117603364,\n",
       " 0.08180375971413544,\n",
       " 0.08007163799202244,\n",
       " 0.07989649009225254,\n",
       " 0.0824767414396359,\n",
       " 0.08014026095485355,\n",
       " 0.08114635558678324,\n",
       " 0.08100586346027076,\n",
       " 0.08028880341989782,\n",
       " 0.08033524376824468,\n",
       " 0.07938360133737453,\n",
       " 0.07916522998153291,\n",
       " 0.08101587409579643,\n",
       " 0.08055599939318671,\n",
       " 0.08115784436571116,\n",
       " 0.081263477981435,\n",
       " 0.07951994296265515,\n",
       " 0.08113596767966559,\n",
       " 0.07990822673741665,\n",
       " 0.08179999838625963,\n",
       " 0.08040162108837137,\n",
       " 0.08202570063188609,\n",
       " 0.08161320505415155,\n",
       " 0.08096808734924121,\n",
       " 0.08009360381711332,\n",
       " 0.08243972327279794,\n",
       " 0.08172908557775428,\n",
       " 0.08011721369562336,\n",
       " 0.08239810110439302]"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mse_keep"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "dd8208f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tmp = min(mse_keep)\n",
    "\n",
    "index = mse_keep.index(tmp)\n",
    "index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "c5d36d8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.30728   ,  0.03425596,  0.18063985, -0.04840711,  0.1757659 ,\n",
       "        0.13469539,  0.03197527,  0.20339655,  0.22599142,  0.04743118,\n",
       "        0.25853475,  0.24185709,  0.19362917,  0.11924557,  0.07262024,\n",
       "        0.15363984,  0.19403226,  0.16581349, -0.03151094, -0.09605063,\n",
       "        0.14973343,  0.42917912,  0.08162972, -0.07092214,  0.19192963,\n",
       "        0.1872408 ,  0.35446834,  0.04757843,  0.21860971,  0.03207523,\n",
       "        0.21516996,  0.25434566,  0.12912158,  0.19907214, -0.0725427 ,\n",
       "        0.19798325,  0.17024309,  0.21360119,  0.15180372,  0.14839937,\n",
       "        0.07927985,  0.10737892,  0.37180604,  0.19372867,  0.14462163,\n",
       "        0.20515474,  0.23892731,  0.20708475,  0.26351162,  0.20198081,\n",
       "        0.00077846,  0.3256029 ,  0.40444579])"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X = the_table_created.drop([\"TEAM\",\"test_stat\"],axis=1)\n",
    "\n",
    "Y = the_table_created[\"test_stat\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.30)\n",
    "\n",
    "regr = RandomForestRegressor(max_depth=6, n_estimators=100)\n",
    "\n",
    "\n",
    "regr.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "regr.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "adfcd879",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.004927945026759748"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "cross_val_score(regr, X, Y, cv=5,scoring=\"neg_mean_squared_error\")\n",
    "np.mean(cross_val_score(regr, X, Y, cv=5,scoring=\"neg_mean_squared_error\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "9c1eaa34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.17247624778229578"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = regr.predict(final_tester)\n",
    "mean_squared_error(Y_TEST, predictions, squared=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "48b1b6e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.09460970411218668"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.std(Y_TEST)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6543e386",
   "metadata": {},
   "source": [
    "While thee higher max depth performs better on cross validation it performs worse for predicted 2021-2022 season "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35e38563",
   "metadata": {},
   "source": [
    "## Linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "ebd785cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = the_table_created.iloc[:,:-1]\n",
    "y = the_table_created.iloc[:, -1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "843ade66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>97.054264</td>\n",
       "      <td>99.023256</td>\n",
       "      <td>40.124031</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>-7.930233</td>\n",
       "      <td>-2.272093</td>\n",
       "      <td>3.922481</td>\n",
       "      <td>4.441860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>101.386364</td>\n",
       "      <td>104.659091</td>\n",
       "      <td>42.159091</td>\n",
       "      <td>44.287879</td>\n",
       "      <td>-1.666667</td>\n",
       "      <td>7.987879</td>\n",
       "      <td>4.257576</td>\n",
       "      <td>5.128788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>95.686047</td>\n",
       "      <td>104.046512</td>\n",
       "      <td>42.313953</td>\n",
       "      <td>44.620155</td>\n",
       "      <td>-0.065116</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.639535</td>\n",
       "      <td>4.488372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>102.500000</td>\n",
       "      <td>101.345238</td>\n",
       "      <td>45.309524</td>\n",
       "      <td>44.166667</td>\n",
       "      <td>-6.380952</td>\n",
       "      <td>-1.423810</td>\n",
       "      <td>5.571429</td>\n",
       "      <td>3.619048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>98.211111</td>\n",
       "      <td>101.244444</td>\n",
       "      <td>41.266667</td>\n",
       "      <td>41.377778</td>\n",
       "      <td>-1.871111</td>\n",
       "      <td>6.588889</td>\n",
       "      <td>3.833333</td>\n",
       "      <td>4.733333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>103.933333</td>\n",
       "      <td>109.644444</td>\n",
       "      <td>40.544444</td>\n",
       "      <td>44.629630</td>\n",
       "      <td>-1.433333</td>\n",
       "      <td>6.725926</td>\n",
       "      <td>4.944444</td>\n",
       "      <td>4.844444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>103.869048</td>\n",
       "      <td>105.678571</td>\n",
       "      <td>41.345238</td>\n",
       "      <td>44.702381</td>\n",
       "      <td>0.928571</td>\n",
       "      <td>8.483333</td>\n",
       "      <td>4.511905</td>\n",
       "      <td>5.035714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>97.933333</td>\n",
       "      <td>105.342222</td>\n",
       "      <td>43.133333</td>\n",
       "      <td>41.466667</td>\n",
       "      <td>-9.822222</td>\n",
       "      <td>1.414222</td>\n",
       "      <td>3.844444</td>\n",
       "      <td>5.266667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>99.295455</td>\n",
       "      <td>105.102273</td>\n",
       "      <td>41.386364</td>\n",
       "      <td>42.488636</td>\n",
       "      <td>2.727273</td>\n",
       "      <td>9.781818</td>\n",
       "      <td>5.079545</td>\n",
       "      <td>5.215909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>107.305556</td>\n",
       "      <td>106.805556</td>\n",
       "      <td>42.027778</td>\n",
       "      <td>42.555556</td>\n",
       "      <td>-1.433333</td>\n",
       "      <td>-1.233333</td>\n",
       "      <td>4.361111</td>\n",
       "      <td>3.972222</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>121 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "104   97.054264   99.023256  40.124031  44.000000       -7.930233   \n",
       "114  101.386364  104.659091  42.159091  44.287879       -1.666667   \n",
       "86    95.686047  104.046512  42.313953  44.620155       -0.065116   \n",
       "74   102.500000  101.345238  45.309524  44.166667       -6.380952   \n",
       "142   98.211111  101.244444  41.266667  41.377778       -1.871111   \n",
       "..          ...         ...        ...        ...             ...   \n",
       "145  103.933333  109.644444  40.544444  44.629630       -1.433333   \n",
       "68   103.869048  105.678571  41.345238  44.702381        0.928571   \n",
       "156   97.933333  105.342222  43.133333  41.466667       -9.822222   \n",
       "134   99.295455  105.102273  41.386364  42.488636        2.727273   \n",
       "33   107.305556  106.805556  42.027778  42.555556       -1.433333   \n",
       "\n",
       "     plusminus_away  BLK_home  BLK_away  \n",
       "104       -2.272093  3.922481  4.441860  \n",
       "114        7.987879  4.257576  5.128788  \n",
       "86         5.000000  4.639535  4.488372  \n",
       "74        -1.423810  5.571429  3.619048  \n",
       "142        6.588889  3.833333  4.733333  \n",
       "..              ...       ...       ...  \n",
       "145        6.725926  4.944444  4.844444  \n",
       "68         8.483333  4.511905  5.035714  \n",
       "156        1.414222  3.844444  5.266667  \n",
       "134        9.781818  5.079545  5.215909  \n",
       "33        -1.233333  4.361111  3.972222  \n",
       "\n",
       "[121 rows x 8 columns]"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "5c23d7a8",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:              test_stat   R-squared:                       0.895\n",
      "Model:                            OLS   Adj. R-squared:                  0.888\n",
      "Method:                 Least Squares   F-statistic:                     119.5\n",
      "Date:                Fri, 09 Dec 2022   Prob (F-statistic):           3.38e-51\n",
      "Time:                        17:00:18   Log-Likelihood:                 195.64\n",
      "No. Observations:                 121   AIC:                            -373.3\n",
      "Df Residuals:                     112   BIC:                            -348.1\n",
      "Df Model:                           8                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==================================================================================\n",
      "                     coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------\n",
      "const              0.1738      0.158      1.103      0.272      -0.138       0.486\n",
      "PPG_away       -6.475e-06      0.001     -0.005      0.996      -0.003       0.003\n",
      "PPG_home          -0.0011      0.001     -0.793      0.430      -0.004       0.002\n",
      "RPG_home          -0.0032      0.004     -0.796      0.428      -0.011       0.005\n",
      "RPG_away           0.0032      0.003      0.953      0.343      -0.003       0.010\n",
      "plusminus_home    -0.0316      0.001    -22.303      0.000      -0.034      -0.029\n",
      "plusminus_away     0.0315      0.001     21.111      0.000       0.029       0.034\n",
      "BLK_home          -0.0089      0.009     -1.013      0.313      -0.026       0.008\n",
      "BLK_away          -0.0055      0.007     -0.807      0.422      -0.019       0.008\n",
      "==============================================================================\n",
      "Omnibus:                        1.005   Durbin-Watson:                   1.643\n",
      "Prob(Omnibus):                  0.605   Jarque-Bera (JB):                1.076\n",
      "Skew:                           0.207   Prob(JB):                        0.584\n",
      "Kurtosis:                       2.797   Cond. No.                     5.35e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 5.35e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.9/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
      "  x = pd.concat(x[::order], 1)\n"
     ]
    }
   ],
   "source": [
    "import statsmodels.api as sm\n",
    "x = sm.add_constant(X_train)\n",
    "mod = sm.OLS(y_train,x)\n",
    "\n",
    "res = mod.fit()\n",
    "\n",
    "print(res.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "4abee806",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.07667722029599476"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_two = sm.add_constant(X_TEST.drop([\"test_stat\"],axis=1))\n",
    "\n",
    "sm.tools.eval_measures.mse(Y_TEST,res.predict(x_two))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "01678869",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>97.054264</td>\n",
       "      <td>99.023256</td>\n",
       "      <td>40.124031</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>-7.930233</td>\n",
       "      <td>-2.272093</td>\n",
       "      <td>3.922481</td>\n",
       "      <td>4.441860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>101.386364</td>\n",
       "      <td>104.659091</td>\n",
       "      <td>42.159091</td>\n",
       "      <td>44.287879</td>\n",
       "      <td>-1.666667</td>\n",
       "      <td>7.987879</td>\n",
       "      <td>4.257576</td>\n",
       "      <td>5.128788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>95.686047</td>\n",
       "      <td>104.046512</td>\n",
       "      <td>42.313953</td>\n",
       "      <td>44.620155</td>\n",
       "      <td>-0.065116</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.639535</td>\n",
       "      <td>4.488372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>102.500000</td>\n",
       "      <td>101.345238</td>\n",
       "      <td>45.309524</td>\n",
       "      <td>44.166667</td>\n",
       "      <td>-6.380952</td>\n",
       "      <td>-1.423810</td>\n",
       "      <td>5.571429</td>\n",
       "      <td>3.619048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>98.211111</td>\n",
       "      <td>101.244444</td>\n",
       "      <td>41.266667</td>\n",
       "      <td>41.377778</td>\n",
       "      <td>-1.871111</td>\n",
       "      <td>6.588889</td>\n",
       "      <td>3.833333</td>\n",
       "      <td>4.733333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>103.933333</td>\n",
       "      <td>109.644444</td>\n",
       "      <td>40.544444</td>\n",
       "      <td>44.629630</td>\n",
       "      <td>-1.433333</td>\n",
       "      <td>6.725926</td>\n",
       "      <td>4.944444</td>\n",
       "      <td>4.844444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>103.869048</td>\n",
       "      <td>105.678571</td>\n",
       "      <td>41.345238</td>\n",
       "      <td>44.702381</td>\n",
       "      <td>0.928571</td>\n",
       "      <td>8.483333</td>\n",
       "      <td>4.511905</td>\n",
       "      <td>5.035714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>97.933333</td>\n",
       "      <td>105.342222</td>\n",
       "      <td>43.133333</td>\n",
       "      <td>41.466667</td>\n",
       "      <td>-9.822222</td>\n",
       "      <td>1.414222</td>\n",
       "      <td>3.844444</td>\n",
       "      <td>5.266667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>99.295455</td>\n",
       "      <td>105.102273</td>\n",
       "      <td>41.386364</td>\n",
       "      <td>42.488636</td>\n",
       "      <td>2.727273</td>\n",
       "      <td>9.781818</td>\n",
       "      <td>5.079545</td>\n",
       "      <td>5.215909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>107.305556</td>\n",
       "      <td>106.805556</td>\n",
       "      <td>42.027778</td>\n",
       "      <td>42.555556</td>\n",
       "      <td>-1.433333</td>\n",
       "      <td>-1.233333</td>\n",
       "      <td>4.361111</td>\n",
       "      <td>3.972222</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>121 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "104   97.054264   99.023256  40.124031  44.000000       -7.930233   \n",
       "114  101.386364  104.659091  42.159091  44.287879       -1.666667   \n",
       "86    95.686047  104.046512  42.313953  44.620155       -0.065116   \n",
       "74   102.500000  101.345238  45.309524  44.166667       -6.380952   \n",
       "142   98.211111  101.244444  41.266667  41.377778       -1.871111   \n",
       "..          ...         ...        ...        ...             ...   \n",
       "145  103.933333  109.644444  40.544444  44.629630       -1.433333   \n",
       "68   103.869048  105.678571  41.345238  44.702381        0.928571   \n",
       "156   97.933333  105.342222  43.133333  41.466667       -9.822222   \n",
       "134   99.295455  105.102273  41.386364  42.488636        2.727273   \n",
       "33   107.305556  106.805556  42.027778  42.555556       -1.433333   \n",
       "\n",
       "     plusminus_away  BLK_home  BLK_away  \n",
       "104       -2.272093  3.922481  4.441860  \n",
       "114        7.987879  4.257576  5.128788  \n",
       "86         5.000000  4.639535  4.488372  \n",
       "74        -1.423810  5.571429  3.619048  \n",
       "142        6.588889  3.833333  4.733333  \n",
       "..              ...       ...       ...  \n",
       "145        6.725926  4.944444  4.844444  \n",
       "68         8.483333  4.511905  5.035714  \n",
       "156        1.414222  3.844444  5.266667  \n",
       "134        9.781818  5.079545  5.215909  \n",
       "33        -1.233333  4.361111  3.972222  \n",
       "\n",
       "[121 rows x 8 columns]"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "e49ce583",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.2769065190565126"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "mean_squared_error(Y_TEST, model.predict(X_TEST.drop([\"test_stat\"],axis=1)), squared=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "4c719e78",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'LinearRegression' object has no attribute 'summary'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[0;32mIn [199], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msummary\u001b[49m()\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'LinearRegression' object has no attribute 'summary'"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "401ad7d3",
   "metadata": {},
   "source": [
    "### Logistic regression model to predict whether or not proportion of home wins is higher than away"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "72178a1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_our_y = [1 if i >0 else 0 for i in y_train ]\n",
    "test_our_y = [1 if i>0 else 0 for i in y_test]\n",
    "twenty_2021 = [1 if i>0 else 0 for i in Y_TEST]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "51eef517",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1]"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twenty_2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "b99c0a01",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "log_reg = LogisticRegression().fit(X_train, train_our_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "efcddbe7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9998760475145185,\n",
       " 0.5446311073599805,\n",
       " 0.999149354664035,\n",
       " 0.9917537529405366,\n",
       " 0.9990605461918585,\n",
       " 0.9996407381750351,\n",
       " 0.5232685483747451,\n",
       " 0.9999967799439379,\n",
       " 0.8612319188315287,\n",
       " 0.9962093778882146,\n",
       " 0.9986137139858975,\n",
       " 0.9619753492590496,\n",
       " 0.9622801772439501,\n",
       " 0.9982366214924349,\n",
       " 0.003011040975205881,\n",
       " 0.27208874546318784,\n",
       " 0.4362756878383407,\n",
       " 0.9955990739112166,\n",
       " 0.8391004398688194,\n",
       " 0.9959996598037661,\n",
       " 0.9998579411284502,\n",
       " 0.8758514581657397,\n",
       " 0.5480840181059432,\n",
       " 0.9967069746517285,\n",
       " 0.9976636085545807,\n",
       " 0.9999834067616887,\n",
       " 0.9999776466251198,\n",
       " 0.9975783424669122,\n",
       " 0.9965911059959329,\n",
       " 0.9876649757207356]"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[i[0] for i in log_reg.predict_proba(X_TEST.drop([\"test_stat\"],axis=1))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "194e1450",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.16666666666666666"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg.score(X_TEST.drop([\"test_stat\"],axis=1), twenty_2021)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "87bc5064",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 0,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "twenty_2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "a9b4878a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0])"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg.predict(X_TEST.drop([\"test_stat\"],axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "564a7d34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPG_away</th>\n",
       "      <th>PPG_home</th>\n",
       "      <th>RPG_home</th>\n",
       "      <th>RPG_away</th>\n",
       "      <th>plusminus_home</th>\n",
       "      <th>plusminus_away</th>\n",
       "      <th>BLK_home</th>\n",
       "      <th>BLK_away</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>94.090909</td>\n",
       "      <td>99.090909</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>42.363636</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.878788</td>\n",
       "      <td>4.393939</td>\n",
       "      <td>4.787879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>91.545455</td>\n",
       "      <td>92.151515</td>\n",
       "      <td>37.121212</td>\n",
       "      <td>40.454545</td>\n",
       "      <td>-2.727273</td>\n",
       "      <td>7.727273</td>\n",
       "      <td>5.818182</td>\n",
       "      <td>5.151515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>93.363636</td>\n",
       "      <td>92.696970</td>\n",
       "      <td>42.484848</td>\n",
       "      <td>42.060606</td>\n",
       "      <td>-7.484848</td>\n",
       "      <td>-6.909091</td>\n",
       "      <td>3.545455</td>\n",
       "      <td>4.393939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>90.000000</td>\n",
       "      <td>89.272727</td>\n",
       "      <td>40.575758</td>\n",
       "      <td>41.696970</td>\n",
       "      <td>-4.757576</td>\n",
       "      <td>-2.757576</td>\n",
       "      <td>4.242424</td>\n",
       "      <td>5.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>96.757576</td>\n",
       "      <td>95.939394</td>\n",
       "      <td>45.484848</td>\n",
       "      <td>47.848485</td>\n",
       "      <td>8.242424</td>\n",
       "      <td>8.121212</td>\n",
       "      <td>4.939394</td>\n",
       "      <td>6.818182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>109.956522</td>\n",
       "      <td>105.989130</td>\n",
       "      <td>44.163043</td>\n",
       "      <td>42.978261</td>\n",
       "      <td>4.943478</td>\n",
       "      <td>4.636957</td>\n",
       "      <td>6.478261</td>\n",
       "      <td>5.641304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>96.391304</td>\n",
       "      <td>101.043478</td>\n",
       "      <td>42.804348</td>\n",
       "      <td>42.891304</td>\n",
       "      <td>-1.352174</td>\n",
       "      <td>3.136957</td>\n",
       "      <td>5.869565</td>\n",
       "      <td>5.728261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>94.782609</td>\n",
       "      <td>93.695652</td>\n",
       "      <td>41.391304</td>\n",
       "      <td>42.760870</td>\n",
       "      <td>-10.100000</td>\n",
       "      <td>-3.804348</td>\n",
       "      <td>6.282609</td>\n",
       "      <td>6.130435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>101.234043</td>\n",
       "      <td>101.914894</td>\n",
       "      <td>43.925532</td>\n",
       "      <td>42.170213</td>\n",
       "      <td>-0.825532</td>\n",
       "      <td>2.723404</td>\n",
       "      <td>5.191489</td>\n",
       "      <td>5.510638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>106.489362</td>\n",
       "      <td>102.978723</td>\n",
       "      <td>43.510638</td>\n",
       "      <td>43.191489</td>\n",
       "      <td>-4.097872</td>\n",
       "      <td>6.565957</td>\n",
       "      <td>4.936170</td>\n",
       "      <td>5.744681</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>174 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       PPG_away    PPG_home   RPG_home   RPG_away  plusminus_home  \\\n",
       "0     94.090909   99.090909  40.000000  42.363636        2.000000   \n",
       "1     91.545455   92.151515  37.121212  40.454545       -2.727273   \n",
       "2     93.363636   92.696970  42.484848  42.060606       -7.484848   \n",
       "3     90.000000   89.272727  40.575758  41.696970       -4.757576   \n",
       "4     96.757576   95.939394  45.484848  47.848485        8.242424   \n",
       "..          ...         ...        ...        ...             ...   \n",
       "169  109.956522  105.989130  44.163043  42.978261        4.943478   \n",
       "170   96.391304  101.043478  42.804348  42.891304       -1.352174   \n",
       "171   94.782609   93.695652  41.391304  42.760870      -10.100000   \n",
       "172  101.234043  101.914894  43.925532  42.170213       -0.825532   \n",
       "173  106.489362  102.978723  43.510638  43.191489       -4.097872   \n",
       "\n",
       "     plusminus_away  BLK_home  BLK_away  \n",
       "0          4.878788  4.393939  4.787879  \n",
       "1          7.727273  5.818182  5.151515  \n",
       "2         -6.909091  3.545455  4.393939  \n",
       "3         -2.757576  4.242424  5.333333  \n",
       "4          8.121212  4.939394  6.818182  \n",
       "..              ...       ...       ...  \n",
       "169        4.636957  6.478261  5.641304  \n",
       "170        3.136957  5.869565  5.728261  \n",
       "171       -3.804348  6.282609  6.130435  \n",
       "172        2.723404  5.191489  5.510638  \n",
       "173        6.565957  4.936170  5.744681  \n",
       "\n",
       "[174 rows x 8 columns]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f162cd07",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
